{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/App.js\";\nimport React, { Component } from \"react\"; // import { Route, Redirect } from \"react-router-dom\";\n\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\"; // import * as API from \"./helpers/API\";\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/OldLogin\";\nimport Welcome from \"./components/Welcome\";\nimport \"./App.css\"; // import { useAuth0 } from \"../react-auth0-wrapper\";\n\nimport PrivateRoute from \"./components/PrivateRoute\"; //import PropTypes from \"prop-types\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // isLoggedIn: true,\n      // students: [],\n      // tag: \"\",\n      user: {\n        name: \"dongo\",\n        email: \"dongo@dongo.com\",\n        password: \"dongo\",\n        passwordConfirmation: \"dongo\"\n      }\n    };\n  } // goTo(route) {\n  //   this.props.history.replace(`/${route}`);\n  // }\n  // login() {\n  //   this.props.auth.login();\n  // }\n  // logout() {\n  //   this.props.auth.logout();\n  // }\n  // componentDidMount() {\n  //   const { renewSession } = this.props.auth;\n  //   if (localStorage.getItem(\"isLoggedIn\") === \"true\") {\n  //     renewSession();\n  //   }\n  // }\n  // onLogin = user => {\n  //   this.setState({ user: user });\n  //   API.loginTeacher(user)\n  //     .then(this.setState({ isLoggedIn: true }))\n  //     .then(console.log(\"User logged in\"));\n  // };\n  // onLogout = () => {\n  //   API.logoutTeacher().then(\n  //     this.setState({\n  //       isLoggedIn: false,\n  //       user: {\n  //         name: \"\",\n  //         email: \"\",\n  //         password: \"\",\n  //         passwordConfirmation: \"\"\n  //       }\n  //     }).then(console.log(\"User logged out\"))\n  //   );\n  // };\n  // onSignup = user => {\n  //   this.setState({ user: user });\n  //   API.addTeacher(user)\n  //     .then(this.setState({ isLoggedIn: true }))\n  //     .then(console.log(\"User logged in\"));\n  // };\n  // componentDidMount\n\n\n  render() {\n    // const { isAuthenticated } = this.props.auth;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Home // onLogout={this.onLogout}\n      // tag={this.state.tag}\n      // user={this.state.user}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","withRouter","Home","Login","Welcome","PrivateRoute","App","constructor","props","state","user","name","email","password","passwordConfirmation","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAyD,kBAAzD;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAC1BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACA;AACA;AACAC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,OADF;AAEJC,QAAAA,KAAK,EAAE,iBAFH;AAGJC,QAAAA,QAAQ,EAAE,OAHN;AAIJC,QAAAA,oBAAoB,EAAE;AAJlB;AAJK,KAAb;AAWD,GAdyB,CAgB1B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEAC,EAAAA,MAAM,GAAG;AACP;AAEA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,MAAM,EAAE,MACN,oBAAC,IAAD,CACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CADF;AAsDD;;AA3HyB;;AA8H5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n// import * as API from \"./helpers/API\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/OldLogin\";\nimport Welcome from \"./components/Welcome\";\nimport \"./App.css\";\n// import { useAuth0 } from \"../react-auth0-wrapper\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n//import PropTypes from \"prop-types\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // isLoggedIn: true,\n      // students: [],\n      // tag: \"\",\n      user: {\n        name: \"dongo\",\n        email: \"dongo@dongo.com\",\n        password: \"dongo\",\n        passwordConfirmation: \"dongo\"\n      }\n    };\n  }\n\n  // goTo(route) {\n  //   this.props.history.replace(`/${route}`);\n  // }\n\n  // login() {\n  //   this.props.auth.login();\n  // }\n\n  // logout() {\n  //   this.props.auth.logout();\n  // }\n\n  // componentDidMount() {\n  //   const { renewSession } = this.props.auth;\n\n  //   if (localStorage.getItem(\"isLoggedIn\") === \"true\") {\n  //     renewSession();\n  //   }\n  // }\n\n  // onLogin = user => {\n  //   this.setState({ user: user });\n  //   API.loginTeacher(user)\n  //     .then(this.setState({ isLoggedIn: true }))\n  //     .then(console.log(\"User logged in\"));\n  // };\n\n  // onLogout = () => {\n  //   API.logoutTeacher().then(\n  //     this.setState({\n  //       isLoggedIn: false,\n  //       user: {\n  //         name: \"\",\n  //         email: \"\",\n  //         password: \"\",\n  //         passwordConfirmation: \"\"\n  //       }\n  //     }).then(console.log(\"User logged out\"))\n  //   );\n  // };\n\n  // onSignup = user => {\n  //   this.setState({ user: user });\n  //   API.addTeacher(user)\n  //     .then(this.setState({ isLoggedIn: true }))\n  //     .then(console.log(\"User logged in\"));\n  // };\n\n  // componentDidMount\n\n  render() {\n    // const { isAuthenticated } = this.props.auth;\n\n    return (\n      <Router>\n        <div className=\"App\">\n          {/* <Route\n            exact\n            path=\"/\"\n            render={() =>\n              this.state.isLoggedIn ? (\n                <Redirect to=\"/home\" />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          /> */}\n          <Route\n            path=\"/\"\n            render={() => (\n              <Home\n              // onLogout={this.onLogout}\n              // tag={this.state.tag}\n              // user={this.state.user}\n              />\n            )}\n          />\n          {/* <Route exact path=\"/\" component={Welcome} />\n        <Route\n          path=\"/home\"\n          render={() =>\n            this.state.isLoggedIn ? (\n              <Home\n                onLogout={this.onLogout}\n                tag={this.state.tag}\n                user={this.state.user}\n                // students={this.state.students}\n              />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => (\n            <Login\n              loggedIn={this.state.loggedIn}\n              onLogin={this.onLogin}\n              onSignup={this.onSignup}\n            />\n          )}\n        />{\" \"} */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}