{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/sticker-star-frontend-master/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport * as API from \"./helpers/API\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLogin = user => {\n      this.setState({\n        user: user\n      });\n      API.loginTeacher(user).then(this.setState({\n        isLoggedIn: true\n      })).then(console.log(\"User logged in\"));\n    };\n\n    this.onLogout = () => {\n      API.logoutTeacher().then(this.setState({\n        isLoggedIn: false,\n        user: {\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirmation: \"\"\n        }\n      }).then(console.log(\"User logged out\")));\n    };\n\n    this.onSignup = user => {\n      this.setState({\n        user: user\n      });\n      API.addTeacher(user).then(this.setState({\n        isLoggedIn: true\n      })).then(console.log(\"User logged in\"));\n    };\n\n    this.displayWhat = () => {\n      if (location.pathname) {\n        this.setState({\n          tag: location.pathname\n        });\n      }\n    };\n\n    this.state = {\n      isLoggedIn: true,\n      students: [],\n      tag: \"\",\n      user: {\n        name: \"dongo\",\n        email: \"dongo@dongo.com\",\n        password: \"dongo\",\n        passwordConfirmation: \"dongo\"\n      }\n    };\n  } // getStudents = () => {\n  //   axios\n  //     .get(\"/students\")\n  //     .then(res => {\n  //       console.log(res);\n  //       this.setState(state => ({ students: res.data }));\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n  // componentDidMount() {\n  //   this.getStudents();\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => this.state.isLoggedIn ? React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      render: () => this.state.isLoggedIn ? React.createElement(Home, {\n        onLogout: this.onLogout,\n        user: this.state.user // students={this.state.students}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        loggedIn: this.state.loggedIn,\n        onLogin: this.onLogin,\n        onSignup: this.onSignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/quizmox/Desktop/sticker-star-frontend-master/src/App.js"],"names":["React","Component","Route","Redirect","withRouter","API","Home","Login","axios","App","constructor","props","onLogin","user","setState","loginTeacher","then","isLoggedIn","console","log","onLogout","logoutTeacher","name","email","password","passwordConfirmation","onSignup","addTeacher","displayWhat","location","pathname","tag","state","students","render","loggedIn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport * as API from \"./helpers/API\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: true,\n      students: [],\n      tag: \"\",\n      user: {\n        name: \"dongo\",\n        email: \"dongo@dongo.com\",\n        password: \"dongo\",\n        passwordConfirmation: \"dongo\"\n      }\n    };\n  }\n\n  // getStudents = () => {\n  //   axios\n  //     .get(\"/students\")\n  //     .then(res => {\n  //       console.log(res);\n  //       this.setState(state => ({ students: res.data }));\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n\n  // componentDidMount() {\n  //   this.getStudents();\n  // }\n\n  onLogin = user => {\n    this.setState({ user: user });\n    API.loginTeacher(user)\n      .then(this.setState({ isLoggedIn: true }))\n      .then(console.log(\"User logged in\"));\n  };\n\n  onLogout = () => {\n    API.logoutTeacher().then(\n      this.setState({\n        isLoggedIn: false,\n        user: {\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirmation: \"\"\n        }\n      }).then(console.log(\"User logged out\"))\n    );\n  };\n\n  onSignup = user => {\n    this.setState({ user: user });\n    API.addTeacher(user)\n      .then(this.setState({ isLoggedIn: true }))\n      .then(console.log(\"User logged in\"));\n  };\n\n  displayWhat = () => {\n    if (location.pathname) {\n      this.setState({ tag: location.pathname });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route\n          exact\n          path=\"/\"\n          render={() =>\n            this.state.isLoggedIn ? (\n              <Redirect to=\"/home\" />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/home\"\n          render={() =>\n            this.state.isLoggedIn ? (\n              <Home\n                onLogout={this.onLogout}\n                user={this.state.user}\n                // students={this.state.students}\n              />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => (\n            <Login\n              loggedIn={this.state.loggedIn}\n              onLogin={this.onLogin}\n              onSignup={this.onSignup}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}