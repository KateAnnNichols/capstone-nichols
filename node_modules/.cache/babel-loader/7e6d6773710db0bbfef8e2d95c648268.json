{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/components/Home.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\"; // import * as API from \"../helpers/API\";\n\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport ChooseStudent from \"./ChooseStudent\";\nimport AskToClear from \"./AskToClear\"; // import SelectedInfo from \"./SelectedInfo\";\n\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport Stickers from \"./Stickers\";\nimport Rewards from \"./Rewards\";\nimport { stickerData } from \"./stickerData\";\nimport { rewardData } from \"./rewardData\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleAnimation = () => {\n      this.setState(state => ({\n        pageAnimation: !this.state.pageAnimation\n      }));\n      console.log(this.state.pageAnimation);\n    };\n\n    this.onToggleSound = () => {\n      this.setState(state => ({\n        pageSound: !this.state.pageSound\n      }));\n      console.log(this.state.pageSound);\n    };\n\n    this.onSelectStudent = id => {\n      axios.put(\"/students/\" + id).then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardInProgress: true,\n          studentLoaded: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      }).then(console.log(this.state.student)).then(this.props.history.push(\"/home/board\")).catch(err => console.log(err));\n    };\n\n    this.game = (inProgress, withStudent) => {\n      if (!withStudent) {\n        return React.createElement(ChooseStudent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        });\n      } else if (!inProgress && withStudent) {\n        return React.createElement(AskToClear, {\n          clear: this.onLeaveStudent,\n          stay: this.onStayBoard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(StickerBoard // {...routerprops}\n        // boardInProgress={this.boardInProgress}\n        , {\n          boardInProgress: true,\n          onPlaceSticker: this.onPlaceSticker,\n          reward: this.state.reward,\n          stickersPlaced: this.state.stickersPlaced,\n          stickers: this.state.stickers,\n          student: this.state.student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        });\n      } // else {\n      //   return <AskToClear clear={this.onClearBoard} />;\n      // }\n\n    };\n\n    this.gameBoard = state => this.game(this.state.boardInProgress, this.state.studentLoaded);\n\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardInProgress: false,\n      studentLoaded: false,\n      pageAnimation: true,\n      pageSound: true,\n      stickers: [],\n      reward: {},\n      stickersToChoose: stickerData,\n      rewardsToChoose: rewardData,\n      // does this go in StickerBoard?\n      stickersPlaced: 0 // allStickers: stickerData\n\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.onSelectStudent = this.onSelectStudent.bind(this);\n    this.onClearBoard = this.onClearBoard.bind(this);\n    this.onLeaveStudent = this.onLeaveStudent.bind(this);\n    this.onStayBoard = this.onStayBoard.bind(this);\n    this.chooseSticker = this.chooseSticker.bind(this);\n    this.chooseReward = this.chooseReward.bind(this);\n  }\n\n  onClearBoard() {\n    this.setState(prevState => ({\n      // student: {\n      //   _id: \"\",\n      //   name: \"\",\n      //   teacher: \"\",\n      //   boardsCompletedByDate: []\n      // },\n      // boardInProgress: !prevState.boardInProgress\n      boardInProgress: false // studentLoaded: false\n\n    })); // this.props.history.push(\"/home/board\");\n    // this.props.history.push(\"/home\");\n  }\n\n  onLeaveStudent() {\n    this.setState(state => ({\n      student: {},\n      studentLoaded: false\n    }));\n    this.props.history.push(\"/home\");\n  }\n\n  onStayBoard() {\n    this.setState(state => ({\n      boardInProgress: true\n    }));\n    this.props.history.push(\"/home/board\");\n  }\n\n  updateStickers() {\n    if (this.state.stickersPlaced === 3) {\n      this.addBoardToStats();\n      console.log(this.state.student.boardsCompletedByDate); // UI.celebrate();\n\n      this.setState(state => ({\n        stickersPlaced: 0\n      }));\n      axios.put(\"/students/\" + this.state.student._id, this.state.student).then(res => {\n        console.log(res.data);\n      }).then(console.log(\"Boards completed = \".concat(this.state.student.boardsCompleted)));\n    }\n  }\n\n  async onPlaceSticker() {\n    // UI.changeBoard();\n    const audio = new Audio(\"../tada.mp3\");\n    audio.play();\n    console.log(this.state.stickersPlaced);\n    await this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    console.log(this.state.stickersPlaced);\n    this.updateStickers(); // if (this.state.stickersPlaced === 3) {\n    //   this.addBoardToStats();\n    //   console.log(this.state.student.boardsCompletedByDate);\n    //   // UI.celebrate();\n    //   this.setState(state => ({ stickersPlaced: 0 }));\n    //   axios\n    //     .put(\"/students/\" + this.state.student._id, this.state.student)\n    //     .then(res => {\n    //       console.log(res.data);\n    //     })\n    //     .then(\n    //       console.log(\n    //         `Boards completed = ${this.state.student.boardsCompleted}`\n    //       )\n    //     );\n    // }\n  }\n\n  addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    }\n\n    console.log(student.boardsCompletedByDate);\n    this.setState({\n      student: student\n    });\n    console.log(this.state.student);\n  } // CONDITIONAL RENDERING\n\n\n  async chooseSticker(event) {\n    const alt = event.target.alt;\n    console.log(alt);\n    const stickersToChoose = [...this.state.stickersToChoose];\n    const stickers = [...this.state.stickers];\n    console.log(stickers);\n\n    if (stickers.length === 3) {\n      stickers.shift();\n    }\n\n    const sticker = stickersToChoose.filter(sticker => sticker.alt === alt)[0];\n    console.log(sticker);\n    stickers.push(sticker);\n    await this.setState(state => ({\n      stickers: [...stickers]\n    }));\n    console.log(this.state.stickers);\n  }\n\n  async chooseReward(event) {\n    const alt = event.target.alt;\n    const rewardsToChoose = [...this.state.rewardsToChoose];\n    const reward = rewardsToChoose.filter(reward => reward.alt === alt)[0];\n    this.setState(state => ({\n      reward: reward\n    }));\n    console.log(this.state.reward);\n  }\n\n  render() {\n    console.log(this.state.stickers, stickerData);\n    console.log(\"In progress: \" + this.state.boardInProgress);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Navbar, {\n      onClearBoard: this.onClearBoard,\n      onLogout: this.onLogout,\n      onToggleAnimation: this.onToggleAnimation,\n      onToggleSound: this.onToggleSound,\n      pageAnimation: this.state.pageAnimation,\n      pageSound: this.state.pageSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\" // tag for default?\n      ,\n      render: routerprops => React.createElement(StudentList, Object.assign({}, routerprops, {\n        clear: this.onClearBoard,\n        boardInProgress: this.state.boardInProgress,\n        user: this.props.user,\n        tag: this.props.tag,\n        select: this.onSelectStudent,\n        student: this.state.student,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/board\"),\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.gameBoard()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/stickers\"),\n      render: () => React.createElement(Stickers, {\n        choose: this.chooseSticker,\n        stickers: stickerData,\n        student: this.state.student,\n        boardInProgress: this.state.boardInProgress,\n        board: this.onStayBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/rewards\"),\n      render: () => React.createElement(Rewards, {\n        choose: this.chooseReward,\n        rewards: rewardData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/components/Home.js"],"names":["React","Component","Route","withRouter","axios","Navbar","ChooseStudent","AskToClear","StudentList","StickerBoard","Stickers","Rewards","stickerData","rewardData","isSameDay","format","Home","constructor","props","onToggleAnimation","setState","state","pageAnimation","console","log","onToggleSound","pageSound","onSelectStudent","id","put","then","res","data","boardInProgress","studentLoaded","stickersPlaced","student","history","push","catch","err","game","inProgress","withStudent","onLeaveStudent","onStayBoard","onPlaceSticker","reward","stickers","gameBoard","_id","name","teacher","boardsCompletedByDate","stickersToChoose","rewardsToChoose","bind","onClearBoard","chooseSticker","chooseReward","prevState","updateStickers","addBoardToStats","boardsCompleted","audio","Audio","play","Object","assign","boards","currentBoard","length","today","Date","now","day","event","alt","target","shift","sticker","filter","render","match","onLogout","routerprops","user","tag","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\";\n// import * as API from \"../helpers/API\";\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport ChooseStudent from \"./ChooseStudent\";\nimport AskToClear from \"./AskToClear\";\n// import SelectedInfo from \"./SelectedInfo\";\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport Stickers from \"./Stickers\";\nimport Rewards from \"./Rewards\";\nimport { stickerData } from \"./stickerData\";\nimport { rewardData } from \"./rewardData\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardInProgress: false,\n      studentLoaded: false,\n      pageAnimation: true,\n      pageSound: true,\n      stickers: [],\n      reward: {},\n      stickersToChoose: stickerData,\n      rewardsToChoose: rewardData,\n      // does this go in StickerBoard?\n      stickersPlaced: 0\n      // allStickers: stickerData\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.onSelectStudent = this.onSelectStudent.bind(this);\n    this.onClearBoard = this.onClearBoard.bind(this);\n    this.onLeaveStudent = this.onLeaveStudent.bind(this);\n    this.onStayBoard = this.onStayBoard.bind(this);\n    this.chooseSticker = this.chooseSticker.bind(this);\n    this.chooseReward = this.chooseReward.bind(this);\n  }\n\n  onToggleAnimation = () => {\n    this.setState(state => ({\n      pageAnimation: !this.state.pageAnimation\n    }));\n    console.log(this.state.pageAnimation);\n  };\n\n  onToggleSound = () => {\n    this.setState(state => ({\n      pageSound: !this.state.pageSound\n    }));\n    console.log(this.state.pageSound);\n  };\n\n  onSelectStudent = id => {\n    axios\n      .put(\"/students/\" + id)\n      .then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardInProgress: true,\n          studentLoaded: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      })\n      .then(console.log(this.state.student))\n      .then(this.props.history.push(\"/home/board\"))\n      .catch(err => console.log(err));\n  };\n\n  onClearBoard() {\n    this.setState(prevState => ({\n      // student: {\n      //   _id: \"\",\n      //   name: \"\",\n      //   teacher: \"\",\n      //   boardsCompletedByDate: []\n      // },\n      // boardInProgress: !prevState.boardInProgress\n      boardInProgress: false\n      // studentLoaded: false\n    }));\n    // this.props.history.push(\"/home/board\");\n    // this.props.history.push(\"/home\");\n  }\n\n  onLeaveStudent() {\n    this.setState(state => ({ student: {}, studentLoaded: false }));\n    this.props.history.push(\"/home\");\n  }\n\n  onStayBoard() {\n    this.setState(state => ({ boardInProgress: true }));\n    this.props.history.push(\"/home/board\");\n  }\n\n  updateStickers() {\n    if (this.state.stickersPlaced === 3) {\n      this.addBoardToStats();\n      console.log(this.state.student.boardsCompletedByDate);\n      // UI.celebrate();\n      this.setState(state => ({ stickersPlaced: 0 }));\n      axios\n        .put(\"/students/\" + this.state.student._id, this.state.student)\n        .then(res => {\n          console.log(res.data);\n        })\n        .then(\n          console.log(\n            `Boards completed = ${this.state.student.boardsCompleted}`\n          )\n        );\n    }\n  }\n\n  async onPlaceSticker() {\n    // UI.changeBoard();\n    const audio = new Audio(\"../tada.mp3\");\n    audio.play();\n    console.log(this.state.stickersPlaced);\n    await this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    console.log(this.state.stickersPlaced);\n    this.updateStickers();\n    // if (this.state.stickersPlaced === 3) {\n    //   this.addBoardToStats();\n    //   console.log(this.state.student.boardsCompletedByDate);\n    //   // UI.celebrate();\n    //   this.setState(state => ({ stickersPlaced: 0 }));\n    //   axios\n    //     .put(\"/students/\" + this.state.student._id, this.state.student)\n    //     .then(res => {\n    //       console.log(res.data);\n    //     })\n    //     .then(\n    //       console.log(\n    //         `Boards completed = ${this.state.student.boardsCompleted}`\n    //       )\n    //     );\n    // }\n  }\n\n  addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    }\n    console.log(student.boardsCompletedByDate);\n    this.setState({ student: student });\n    console.log(this.state.student);\n  }\n\n  // CONDITIONAL RENDERING\n  game = (inProgress, withStudent) => {\n    if (!withStudent) {\n      return <ChooseStudent />;\n    } else if (!inProgress && withStudent) {\n      return <AskToClear clear={this.onLeaveStudent} stay={this.onStayBoard} />;\n    } else {\n      return (\n        <StickerBoard\n          // {...routerprops}\n          // boardInProgress={this.boardInProgress}\n          boardInProgress={true}\n          onPlaceSticker={this.onPlaceSticker}\n          reward={this.state.reward}\n          stickersPlaced={this.state.stickersPlaced}\n          stickers={this.state.stickers}\n          student={this.state.student}\n        />\n      );\n    }\n    // else {\n    //   return <AskToClear clear={this.onClearBoard} />;\n    // }\n  };\n\n  async chooseSticker(event) {\n    const alt = event.target.alt;\n    console.log(alt);\n    const stickersToChoose = [...this.state.stickersToChoose];\n    const stickers = [...this.state.stickers];\n    console.log(stickers);\n    if (stickers.length === 3) {\n      stickers.shift();\n    }\n    const sticker = stickersToChoose.filter(sticker => sticker.alt === alt)[0];\n    console.log(sticker);\n    stickers.push(sticker);\n    await this.setState(state => ({ stickers: [...stickers] }));\n    console.log(this.state.stickers);\n  }\n\n  async chooseReward(event) {\n    const alt = event.target.alt;\n    const rewardsToChoose = [...this.state.rewardsToChoose];\n    const reward = rewardsToChoose.filter(reward => reward.alt === alt)[0];\n    this.setState(state => ({ reward: reward }));\n    console.log(this.state.reward);\n  }\n\n  gameBoard = state =>\n    this.game(this.state.boardInProgress, this.state.studentLoaded);\n\n  render() {\n    console.log(this.state.stickers, stickerData);\n    console.log(\"In progress: \" + this.state.boardInProgress);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return (\n      <div className=\"Home\">\n        <header className=\"App-header\">\n          {/* <img\n            src={\n              \"https://i.ibb.co/6PZqtHk/Screen-Shot-2019-07-19-at-11-22-08-AM.png\"\n            }\n            className=\"App-logo\"\n            alt=\"chalkboard\"\n          /> */}\n          {/* <h1 className=\"App-title\">\n            <img\n              src={\n                \"https://i.ibb.co/0f83Kyv/Screen-Shot-2019-07-25-at-5-56-37-PM.png\"\n              }\n              className=\"App-title\"\n              alt=\"Sticker Star\"\n            />\n          </h1> */}\n          {/* <SelectedInfo\n            student={this.state.student}\n            teacher={this.props.user}\n          /> */}\n        </header>\n        <Navbar\n          onClearBoard={this.onClearBoard}\n          onLogout={this.onLogout}\n          onToggleAnimation={this.onToggleAnimation}\n          onToggleSound={this.onToggleSound}\n          pageAnimation={this.state.pageAnimation}\n          pageSound={this.state.pageSound}\n        />\n        <div>\n          <Route\n            exact\n            path=\"/home\"\n            // tag for default?\n            render={routerprops => (\n              <StudentList\n                {...routerprops}\n                clear={this.onClearBoard}\n                boardInProgress={this.state.boardInProgress}\n                user={this.props.user}\n                tag={this.props.tag}\n                select={this.onSelectStudent}\n                student={this.state.student}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`${match.url}/board`}\n            render={() => <div>{this.gameBoard()}</div>}\n          />\n          <Route\n            exact\n            path={`${match.url}/stickers`}\n            render={() => (\n              <Stickers\n                choose={this.chooseSticker}\n                stickers={stickerData}\n                student={this.state.student}\n                boardInProgress={this.state.boardInProgress}\n                board={this.onStayBoard}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`${match.url}/rewards`}\n            render={() => (\n              <Rewards choose={this.chooseReward} rewards={rewardData} />\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}