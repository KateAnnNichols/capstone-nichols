{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/components/Welcome.js\";\nimport React, { Component } from \"react\";\nimport { withAuth } from \"@okta/okta-react\";\n\nclass Welcome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authenticated: null\n    };\n    this.checkAuthentication = this.checkAuthentication.bind(this);\n    this.checkAuthentication();\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async checkAuthentication() {\n    const authenticated = await this.props.auth.isAuthenticated();\n\n    if (authenticated !== this.state.authenticated) {\n      this.setState({\n        authenticated\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  async login() {\n    // Redirect to '/' after login\n    this.props.auth.login(\"/\");\n  }\n\n  async logout() {\n    // Redirect to '/' after logout\n    this.props.auth.logout(\"/\");\n  }\n\n  render() {\n    // if (this.state.authenticated === null) return null;\n    // return this.state.authenticated ? (\n    //   <button onClick={this.logout}>Logout</button>\n    // ) : (\n    //   <button onClick={this.login}>Login</button>\n    // );\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.authenticated !== null && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Custom Login Page with Sign In Widget\"), this.state.authenticated && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Welcome back, \", this.state.userinfo.name, \"!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"You have successfully authenticated against your Okta org, and have been redirected back to this application. You now have an ID token and access token in local storage. Visit the\", \" \", React.createElement(\"a\", {\n      href: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"My Profile\"), \" page to take a look inside the ID token.\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Next Steps\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Currently this application is a stand-alone front end application. At this point you can use the access token to authenticate yourself against resource servers that you control.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"This sample is designed to work with one of our resource server examples. To see access token authentication in action, please download one of these resource server examples:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Once you have downloaded and started the example resource server, you can visit the \", React.createElement(\"a\", {\n      href: \"/messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"My Messages\"), \" \", \"page to see the authentication process in action.\")), !this.state.authenticated && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"If you\\u2018re viewing this page then you have successfully started this React application.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"This example shows you how to use the \"), React.createElement(\"a\", {\n      href: \"https://github.com/okta/okta-oidc-js/tree/master/packages/okta-react\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Okta React Library\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" and the \"), React.createElement(\"a\", {\n      href: \"https://github.com/okta/okta-signin-widget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Okta Sign-In Widget\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" to add the \"), React.createElement(\"a\", {\n      href: \"https://developer.okta.com/authentication-guide/implementing-authentication/implicit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Implicit Flow\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", \"to your application. This combination is useful when you want to leverage the features of the Sign-In Widget,\", \" \"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \", \"and the authentication helper components from the\", \" \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"okta-react\"), \" module.\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Once you have logged in you will be redirected through your authorization server (the issuer defined in config) to create a session for Single-Sign-On (SSO). After this you will be redirected back to the application with an ID token and access token. The tokens will be stored in local storage for future use.\"), React.createElement(\"button\", {\n      id: \"login-button\",\n      primary: true,\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nexport default withAuth(Welcome);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/components/Welcome.js"],"names":["React","Component","withAuth","Welcome","constructor","props","state","authenticated","checkAuthentication","bind","login","logout","auth","isAuthenticated","setState","componentDidUpdate","render","userinfo","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withAuth } from \"@okta/okta-react\";\n\nclass Welcome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { authenticated: null };\n    this.checkAuthentication = this.checkAuthentication.bind(this);\n    this.checkAuthentication();\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async checkAuthentication() {\n    const authenticated = await this.props.auth.isAuthenticated();\n    if (authenticated !== this.state.authenticated) {\n      this.setState({ authenticated });\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  async login() {\n    // Redirect to '/' after login\n    this.props.auth.login(\"/\");\n  }\n\n  async logout() {\n    // Redirect to '/' after logout\n    this.props.auth.logout(\"/\");\n  }\n\n  render() {\n    // if (this.state.authenticated === null) return null;\n    // return this.state.authenticated ? (\n    //   <button onClick={this.logout}>Logout</button>\n    // ) : (\n    //   <button onClick={this.login}>Login</button>\n    // );\n    return (\n      <div>\n        {this.state.authenticated !== null && (\n          <div>\n            <h1>Custom Login Page with Sign In Widget</h1>\n            {this.state.authenticated && (\n              <div>\n                <p>Welcome back, {this.state.userinfo.name}!</p>\n                <p>\n                  You have successfully authenticated against your Okta org, and\n                  have been redirected back to this application. You now have an\n                  ID token and access token in local storage. Visit the{\" \"}\n                  <a href=\"/profile\">My Profile</a> page to take a look inside\n                  the ID token.\n                </p>\n                <h3>Next Steps</h3>\n                <p>\n                  Currently this application is a stand-alone front end\n                  application. At this point you can use the access token to\n                  authenticate yourself against resource servers that you\n                  control.\n                </p>\n                <p>\n                  This sample is designed to work with one of our resource\n                  server examples. To see access token authentication in action,\n                  please download one of these resource server examples:\n                </p>\n                {/* <ul>\n                  {resourceServerExamples.map(example => <li key={example.label}><a href={example.url}>{example.label}</a></li>)}\n                </ul> */}\n                <p>\n                  Once you have downloaded and started the example resource\n                  server, you can visit the <a href=\"/messages\">My Messages</a>{\" \"}\n                  page to see the authentication process in action.\n                </p>\n              </div>\n            )}\n            {!this.state.authenticated && (\n              <div>\n                <p>\n                  If you&lsquo;re viewing this page then you have successfully\n                  started this React application.\n                </p>\n                <p>\n                  <span>This example shows you how to use the </span>\n                  <a href=\"https://github.com/okta/okta-oidc-js/tree/master/packages/okta-react\">\n                    Okta React Library\n                  </a>\n                  <span> and the </span>\n                  <a href=\"https://github.com/okta/okta-signin-widget\">\n                    Okta Sign-In Widget\n                  </a>\n                  <span> to add the </span>\n                  <a href=\"https://developer.okta.com/authentication-guide/implementing-authentication/implicit\">\n                    Implicit Flow\n                  </a>\n                  <span>\n                    {\" \"}\n                    to your application. This combination is useful when you\n                    want to leverage the features of the Sign-In Widget,{\" \"}\n                  </span>\n                  <span>\n                    {\" \"}\n                    and the authentication helper components from the{\" \"}\n                    <code>okta-react</code> module.\n                  </span>\n                </p>\n                <p>\n                  Once you have logged in you will be redirected through your\n                  authorization server (the issuer defined in config) to create\n                  a session for Single-Sign-On (SSO). After this you will be\n                  redirected back to the application with an ID token and access\n                  token. The tokens will be stored in local storage for future\n                  use.\n                </p>\n                <button id=\"login-button\" primary onClick={this.login}>\n                  Login\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Welcome);\n"]},"metadata":{},"sourceType":"module"}