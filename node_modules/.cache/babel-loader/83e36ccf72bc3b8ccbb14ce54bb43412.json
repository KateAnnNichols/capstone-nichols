{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/App2.js\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\"; // import * as API from \"./helpers/API\";\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport \"./App.css\"; //import PropTypes from \"prop-types\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: true,\n      students: [],\n      tag: \"\",\n      user: {\n        name: \"dongo\",\n        email: \"dongo@dongo.com\",\n        password: \"dongo\",\n        passwordConfirmation: \"dongo\"\n      }\n    };\n  } // onLogin = user => {\n  //   this.setState({ user: user });\n  //   API.loginTeacher(user)\n  //     .then(this.setState({ isLoggedIn: true }))\n  //     .then(console.log(\"User logged in\"));\n  // };\n  // onLogout = () => {\n  //   API.logoutTeacher().then(\n  //     this.setState({\n  //       isLoggedIn: false,\n  //       user: {\n  //         name: \"\",\n  //         email: \"\",\n  //         password: \"\",\n  //         passwordConfirmation: \"\"\n  //       }\n  //     }).then(console.log(\"User logged out\"))\n  //   );\n  // };\n  // onSignup = user => {\n  //   this.setState({ user: user });\n  //   API.addTeacher(user)\n  //     .then(this.setState({ isLoggedIn: true }))\n  //     .then(console.log(\"User logged in\"));\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => this.state.isLoggedIn ? React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      render: () => this.state.isLoggedIn ? React.createElement(Home, {\n        onLogout: this.onLogout,\n        tag: this.state.tag,\n        user: this.state.user // students={this.state.students}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(Login, {\n        loggedIn: this.state.loggedIn,\n        onLogin: this.onLogin,\n        onSignup: this.onSignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/App2.js"],"names":["React","Component","Route","Redirect","withRouter","Home","Login","App","constructor","props","state","isLoggedIn","students","tag","user","name","email","password","passwordConfirmation","render","onLogout","loggedIn","onLogin","onSignup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP,C,CACA;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AACxBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,IADH;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,OADJ;AAEFC,QAAAA,KAAK,EAAE,iBAFL;AAGFC,QAAAA,QAAQ,EAAE,OAHR;AAIFC,QAAAA,oBAAoB,EAAE;AAJpB;AAJG,KAAb;AAWH,GAduB,CAgBxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAC,GAFT;AAGI,MAAA,MAAM,EAAE,MACJ,KAAKT,KAAL,CAAWC,UAAX,GACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAGQ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAYI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,MAAM,EAAE,MACJ,KAAKD,KAAL,CAAWC,UAAX,GACI,oBAAC,IAAD;AACI,QAAA,QAAQ,EAAE,KAAKS,QADnB;AAEI,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWG,GAFpB;AAGI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAHrB,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAQQ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EA2BI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,MAAM,EAAE,MACJ,oBAAC,KAAD;AACI,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWW,QADzB;AAEI,QAAA,OAAO,EAAE,KAAKC,OAFlB;AAGI,QAAA,QAAQ,EAAE,KAAKC,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,CADJ;AAyCH;;AAtFuB;;AAyF5B,eAAenB,UAAU,CAACG,GAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n// import * as API from \"./helpers/API\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport \"./App.css\";\n//import PropTypes from \"prop-types\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            students: [],\n            tag: \"\",\n            user: {\n                name: \"dongo\",\n                email: \"dongo@dongo.com\",\n                password: \"dongo\",\n                passwordConfirmation: \"dongo\"\n            }\n        };\n    }\n\n    // onLogin = user => {\n    //   this.setState({ user: user });\n    //   API.loginTeacher(user)\n    //     .then(this.setState({ isLoggedIn: true }))\n    //     .then(console.log(\"User logged in\"));\n    // };\n\n    // onLogout = () => {\n    //   API.logoutTeacher().then(\n    //     this.setState({\n    //       isLoggedIn: false,\n    //       user: {\n    //         name: \"\",\n    //         email: \"\",\n    //         password: \"\",\n    //         passwordConfirmation: \"\"\n    //       }\n    //     }).then(console.log(\"User logged out\"))\n    //   );\n    // };\n\n    // onSignup = user => {\n    //   this.setState({ user: user });\n    //   API.addTeacher(user)\n    //     .then(this.setState({ isLoggedIn: true }))\n    //     .then(console.log(\"User logged in\"));\n    // };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() =>\n                        this.state.isLoggedIn ? (\n                            <Redirect to=\"/home\" />\n                        ) : (\n                                <Redirect to=\"/login\" />\n                            )\n                    }\n                />\n                <Route\n                    path=\"/home\"\n                    render={() =>\n                        this.state.isLoggedIn ? (\n                            <Home\n                                onLogout={this.onLogout}\n                                tag={this.state.tag}\n                                user={this.state.user}\n                            // students={this.state.students}\n                            />\n                        ) : (\n                                <Redirect to=\"/login\" />\n                            )\n                    }\n                />\n                <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                        <Login\n                            loggedIn={this.state.loggedIn}\n                            onLogin={this.onLogin}\n                            onSignup={this.onSignup}\n                        />\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}