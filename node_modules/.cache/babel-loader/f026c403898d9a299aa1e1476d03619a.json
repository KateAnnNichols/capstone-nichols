{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/components/Home.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\"; // import * as API from \"../helpers/API\";\n\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport ChooseStudent from \"./ChooseStudent\";\nimport AskToClear from \"./AskToClear\"; // import SelectedInfo from \"./SelectedInfo\";\n\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport Stickers from \"./Stickers\";\nimport Rewards from \"./Rewards\";\nimport soundFile from \"../tada.mp3\";\nimport { stickerData } from \"./stickerData\";\nimport { rewardData } from \"./rewardData\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\nimport confetti from \"canvas-confetti\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleAnimation = () => {\n      this.setState(state => ({\n        pageAnimation: !this.state.pageAnimation\n      }));\n      console.log(this.state.pageAnimation);\n    };\n\n    this.onToggleSound = () => {\n      this.setState(state => ({\n        pageSound: !this.state.pageSound\n      }));\n      console.log(this.state.pageSound);\n    };\n\n    this.chooseStudent = id => {\n      axios.put(\"/students/\" + id).then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardActive: true,\n          studentActive: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      }).then(console.log(this.state.student)).then(this.props.history.push(\"/home/board\")).catch(err => console.log(err));\n    };\n\n    this.game = (boardActive, studentActive) => {\n      if (!studentActive) {\n        return React.createElement(ChooseStudent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        });\n      } else if (!boardActive && studentActive) {\n        return React.createElement(AskToClear, {\n          clear: this.onLeaveStudent,\n          stay: this.onStayBoard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(StickerBoard // {...routerprops}\n        // boardActive={this.boardActive}\n        , {\n          boardActive: true,\n          boardCompleted: this.state.boardCompleted,\n          onPlaceSticker: this.onPlaceSticker,\n          pageAnimation: this.state.pageAnimation,\n          resetBoard: this.resetBoard,\n          reward: this.state.reward,\n          stickersPlaced: this.state.stickersPlaced,\n          sticker: this.state.sticker,\n          student: this.state.student,\n          studentActive: this.state.studentActive,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        });\n      } // else {\n      //   return <AskToClear clear={this.onClearBoard} />;\n      // }\n\n    };\n\n    this.gameBoard = state => this.game(this.state.boardActive, this.state.studentActive);\n\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardActive: false,\n      boardCompleted: false,\n      studentActive: false,\n      pageAnimation: true,\n      pageSound: true,\n      sticker: {\n        src: \"https://i.ibb.co/b2wZDqL/61-Ez-ZBx-ZN2-L-SX425.jpg\",\n        alt: \"star\"\n      },\n      reward: {\n        src: \"https://i.ibb.co/rvtygSG/images.png\",\n        alt: \"great job\"\n      },\n      stickersToChoose: stickerData,\n      rewardsToChoose: rewardData,\n      stickersPlaced: 0\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.chooseStudent = this.chooseStudent.bind(this);\n    this.onClearBoard = this.onClearBoard.bind(this);\n    this.onLeaveStudent = this.onLeaveStudent.bind(this);\n    this.onStayBoard = this.onStayBoard.bind(this);\n    this.chooseSticker = this.chooseSticker.bind(this);\n    this.chooseReward = this.chooseReward.bind(this);\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  onClearBoard() {\n    this.setState(prevState => ({\n      // student: {\n      //   _id: \"\",\n      //   name: \"\",\n      //   teacher: \"\",\n      //   boardsCompletedByDate: []\n      // },\n      // boardActive: !prevState.boardActive\n      boardActive: false // studentActive: false\n\n    })); // this.props.history.push(\"/home/board\");\n    // this.props.history.push(\"/home\");\n  }\n\n  onLeaveStudent() {\n    this.setState(state => ({\n      student: {},\n      studentActive: false\n    }));\n    this.props.history.push(\"/home\");\n  }\n\n  onStayBoard() {\n    this.setState(state => ({\n      boardActive: true\n    }));\n    this.props.history.push(\"/home/board\");\n  }\n\n  async resetBoard() {\n    await this.setState(state => ({\n      boardCompleted: false\n    }));\n  }\n\n  async updateStickers() {\n    var duration = 1.5 * 1000;\n    var end = Date.now() + duration;\n\n    if (this.state.stickersPlaced === 3) {\n      if (this.state.pageAnimation) {\n        (function frame() {\n          // launch a few confetti from the left edge\n          confetti({\n            particleCount: 7,\n            angle: 60,\n            spread: 55,\n            origin: {\n              x: 0\n            }\n          }); // and launch a few from the right edge\n\n          confetti({\n            particleCount: 7,\n            angle: 120,\n            spread: 55,\n            origin: {\n              x: 1\n            }\n          }); // keep going until we are out of time\n\n          if (Date.now() < end) {\n            requestAnimationFrame(frame);\n          }\n        })();\n      }\n\n      this.addBoardToStats();\n      console.log(this.state.student.boardsCompletedByDate); // UI.celebrate();\n\n      await this.setState(state => ({\n        boardCompleted: true,\n        stickersPlaced: 0\n      }));\n      axios.put(\"/students/\" + this.state.student._id, this.state.student).then(res => {\n        console.log(res.data);\n      }).then(console.log(\"Boards completed = \".concat(this.state.student.boardsCompleted)));\n    }\n  }\n\n  async onPlaceSticker() {\n    // UI.changeBoard();\n    if (this.state.pageSound) {\n      const audio = new Audio(soundFile);\n      await audio.play();\n    }\n\n    console.log(this.state.stickersPlaced);\n    await this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    console.log(this.state.stickersPlaced);\n    this.updateStickers(); // if (this.state.stickersPlaced === 3) {\n    //   this.addBoardToStats();\n    //   console.log(this.state.student.boardsCompletedByDate);\n    //   // UI.celebrate();\n    //   this.setState(state => ({ stickersPlaced: 0 }));\n    //   axios\n    //     .put(\"/students/\" + this.state.student._id, this.state.student)\n    //     .then(res => {\n    //       console.log(res.data);\n    //     })\n    //     .then(\n    //       console.log(\n    //         `Boards completed = ${this.state.student.boardsCompleted}`\n    //       )\n    //     );\n    // }\n  }\n\n  async addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    }\n\n    console.log(student.boardsCompletedByDate);\n    await this.setState({\n      student: student\n    });\n    console.log(this.state.student);\n  } // CONDITIONAL RENDERING\n\n\n  async checkBoard(boardActive, studentActive) {\n    if (!studentActive) {\n      return React.createElement(ChooseStudent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      });\n    } else if (!boardActive && studentActive) {\n      await this.setState(state => ({\n        boardActive: true\n      }));\n      return React.createElement(StickerBoard // {...routerprops}\n      // boardActive={this.boardActive}\n      , {\n        boardActive: true,\n        boardCompleted: this.state.boardCompleted,\n        onPlaceSticker: this.onPlaceSticker,\n        pageAnimation: this.state.pageAnimation,\n        resetBoard: this.resetBoard,\n        reward: this.state.reward,\n        stickersPlaced: this.state.stickersPlaced,\n        sticker: this.state.sticker,\n        student: this.state.student,\n        studentActive: this.state.studentActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    } // else {\n    //   return <AskToClear clear={this.onClearBoard} />;\n    // }\n\n  }\n\n  async chooseSticker(event) {\n    const alt = event.target.alt;\n    console.log(alt);\n    const stickersToChoose = [...this.state.stickersToChoose]; // const stickers = [...this.state.stickers];\n    // console.log(stickers);\n    // if (stickers.length === 3) {\n    //   stickers.shift();\n    // }\n\n    const sticker = stickersToChoose.filter(sticker => sticker.alt === alt)[0]; // console.log(sticker);\n    // stickers.push(sticker);\n\n    await this.setState(state => ({\n      sticker: sticker\n    }));\n    console.log(this.state.stickers);\n  }\n\n  async chooseReward(event) {\n    const alt = event.target.alt;\n    const rewardsToChoose = [...this.state.rewardsToChoose];\n    const reward = rewardsToChoose.filter(reward => reward.alt === alt)[0];\n    this.setState(state => ({\n      reward: reward\n    }));\n    console.log(this.state.reward);\n  }\n\n  render() {\n    console.log(this.state.stickers, stickerData);\n    console.log(\"In progress: \" + this.state.boardActive);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      onClearBoard: this.onClearBoard,\n      onLogout: this.onLogout,\n      onToggleAnimation: this.onToggleAnimation,\n      onToggleSound: this.onToggleSound,\n      pageAnimation: this.state.pageAnimation,\n      pageSound: this.state.pageSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\" // tag for default?\n      ,\n      render: routerprops => React.createElement(StudentList, Object.assign({}, routerprops, {\n        clear: this.onClearBoard,\n        boardActive: this.state.boardActive,\n        user: this.props.user,\n        tag: this.props.tag,\n        select: this.chooseStudent,\n        student: this.state.student,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/board\"),\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, this.gameBoard()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/stickers\"),\n      render: () => React.createElement(Stickers, {\n        choose: this.chooseSticker,\n        stickers: stickerData,\n        boardActive: this.state.boardActive,\n        board: this.onStayBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/rewards\"),\n      render: () => React.createElement(Rewards, {\n        choose: this.chooseReward,\n        rewards: rewardData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/components/Home.js"],"names":["React","Component","Route","withRouter","axios","Navbar","ChooseStudent","AskToClear","StudentList","StickerBoard","Stickers","Rewards","soundFile","stickerData","rewardData","isSameDay","format","confetti","Home","constructor","props","onToggleAnimation","setState","state","pageAnimation","console","log","onToggleSound","pageSound","chooseStudent","id","put","then","res","data","boardActive","studentActive","stickersPlaced","student","history","push","catch","err","game","onLeaveStudent","onStayBoard","boardCompleted","onPlaceSticker","resetBoard","reward","sticker","gameBoard","_id","name","teacher","boardsCompletedByDate","src","alt","stickersToChoose","rewardsToChoose","bind","onClearBoard","chooseSticker","chooseReward","prevState","updateStickers","duration","end","Date","now","frame","particleCount","angle","spread","origin","x","requestAnimationFrame","addBoardToStats","boardsCompleted","audio","Audio","play","Object","assign","boards","currentBoard","length","today","day","checkBoard","event","target","filter","stickers","render","match","onLogout","routerprops","user","tag","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\";\n// import * as API from \"../helpers/API\";\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport ChooseStudent from \"./ChooseStudent\";\nimport AskToClear from \"./AskToClear\";\n// import SelectedInfo from \"./SelectedInfo\";\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport Stickers from \"./Stickers\";\nimport Rewards from \"./Rewards\";\nimport soundFile from \"../tada.mp3\";\nimport { stickerData } from \"./stickerData\";\nimport { rewardData } from \"./rewardData\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\nimport confetti from \"canvas-confetti\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardActive: false,\n      boardCompleted: false,\n      studentActive: false,\n      pageAnimation: true,\n      pageSound: true,\n      sticker: {\n        src: \"https://i.ibb.co/b2wZDqL/61-Ez-ZBx-ZN2-L-SX425.jpg\",\n        alt: \"star\"\n      },\n      reward: {\n        src: \"https://i.ibb.co/rvtygSG/images.png\",\n        alt: \"great job\"\n      },\n      stickersToChoose: stickerData,\n      rewardsToChoose: rewardData,\n      stickersPlaced: 0\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.chooseStudent = this.chooseStudent.bind(this);\n    this.onClearBoard = this.onClearBoard.bind(this);\n    this.onLeaveStudent = this.onLeaveStudent.bind(this);\n    this.onStayBoard = this.onStayBoard.bind(this);\n    this.chooseSticker = this.chooseSticker.bind(this);\n    this.chooseReward = this.chooseReward.bind(this);\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  onToggleAnimation = () => {\n    this.setState(state => ({\n      pageAnimation: !this.state.pageAnimation\n    }));\n    console.log(this.state.pageAnimation);\n  };\n\n  onToggleSound = () => {\n    this.setState(state => ({\n      pageSound: !this.state.pageSound\n    }));\n    console.log(this.state.pageSound);\n  };\n\n  chooseStudent = id => {\n    axios\n      .put(\"/students/\" + id)\n      .then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardActive: true,\n          studentActive: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      })\n      .then(console.log(this.state.student))\n      .then(this.props.history.push(\"/home/board\"))\n      .catch(err => console.log(err));\n  };\n\n  onClearBoard() {\n    this.setState(prevState => ({\n      // student: {\n      //   _id: \"\",\n      //   name: \"\",\n      //   teacher: \"\",\n      //   boardsCompletedByDate: []\n      // },\n      // boardActive: !prevState.boardActive\n      boardActive: false\n      // studentActive: false\n    }));\n    // this.props.history.push(\"/home/board\");\n    // this.props.history.push(\"/home\");\n  }\n\n  onLeaveStudent() {\n    this.setState(state => ({ student: {}, studentActive: false }));\n    this.props.history.push(\"/home\");\n  }\n\n  onStayBoard() {\n    this.setState(state => ({ boardActive: true }));\n    this.props.history.push(\"/home/board\");\n  }\n\n  async resetBoard() {\n    await this.setState(state => ({ boardCompleted: false }));\n  }\n\n  async updateStickers() {\n    var duration = 1.5 * 1000;\n    var end = Date.now() + duration;\n\n    if (this.state.stickersPlaced === 3) {\n      if (this.state.pageAnimation) {\n        (function frame() {\n          // launch a few confetti from the left edge\n          confetti({\n            particleCount: 7,\n            angle: 60,\n            spread: 55,\n            origin: { x: 0 }\n          });\n          // and launch a few from the right edge\n          confetti({\n            particleCount: 7,\n            angle: 120,\n            spread: 55,\n            origin: { x: 1 }\n          });\n          // keep going until we are out of time\n          if (Date.now() < end) {\n            requestAnimationFrame(frame);\n          }\n        })();\n      }\n      this.addBoardToStats();\n      console.log(this.state.student.boardsCompletedByDate);\n      // UI.celebrate();\n      await this.setState(state => ({\n        boardCompleted: true,\n        stickersPlaced: 0\n      }));\n      axios\n        .put(\"/students/\" + this.state.student._id, this.state.student)\n        .then(res => {\n          console.log(res.data);\n        })\n        .then(\n          console.log(\n            `Boards completed = ${this.state.student.boardsCompleted}`\n          )\n        );\n    }\n  }\n\n  async onPlaceSticker() {\n    // UI.changeBoard();\n    if (this.state.pageSound) {\n      const audio = new Audio(soundFile);\n      await audio.play();\n    }\n    console.log(this.state.stickersPlaced);\n    await this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    console.log(this.state.stickersPlaced);\n    this.updateStickers();\n    // if (this.state.stickersPlaced === 3) {\n    //   this.addBoardToStats();\n    //   console.log(this.state.student.boardsCompletedByDate);\n    //   // UI.celebrate();\n    //   this.setState(state => ({ stickersPlaced: 0 }));\n    //   axios\n    //     .put(\"/students/\" + this.state.student._id, this.state.student)\n    //     .then(res => {\n    //       console.log(res.data);\n    //     })\n    //     .then(\n    //       console.log(\n    //         `Boards completed = ${this.state.student.boardsCompleted}`\n    //       )\n    //     );\n    // }\n  }\n\n  async addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    }\n    console.log(student.boardsCompletedByDate);\n    await this.setState({ student: student });\n    console.log(this.state.student);\n  }\n\n  // CONDITIONAL RENDERING\n  async checkBoard(boardActive, studentActive) {\n    if (!studentActive) {\n      return <ChooseStudent />;\n    } else if (!boardActive && studentActive) {\n      await this.setState(state => ({ boardActive: true }));\n      return (\n        <StickerBoard\n          // {...routerprops}\n          // boardActive={this.boardActive}\n          boardActive={true}\n          boardCompleted={this.state.boardCompleted}\n          onPlaceSticker={this.onPlaceSticker}\n          pageAnimation={this.state.pageAnimation}\n          resetBoard={this.resetBoard}\n          reward={this.state.reward}\n          stickersPlaced={this.state.stickersPlaced}\n          sticker={this.state.sticker}\n          student={this.state.student}\n          studentActive={this.state.studentActive}\n        />\n      );\n    }\n    // else {\n    //   return <AskToClear clear={this.onClearBoard} />;\n    // }\n  }\n\n  game = (boardActive, studentActive) => {\n    if (!studentActive) {\n      return <ChooseStudent />;\n    } else if (!boardActive && studentActive) {\n      return <AskToClear clear={this.onLeaveStudent} stay={this.onStayBoard} />;\n    } else {\n      return (\n        <StickerBoard\n          // {...routerprops}\n          // boardActive={this.boardActive}\n          boardActive={true}\n          boardCompleted={this.state.boardCompleted}\n          onPlaceSticker={this.onPlaceSticker}\n          pageAnimation={this.state.pageAnimation}\n          resetBoard={this.resetBoard}\n          reward={this.state.reward}\n          stickersPlaced={this.state.stickersPlaced}\n          sticker={this.state.sticker}\n          student={this.state.student}\n          studentActive={this.state.studentActive}\n        />\n      );\n    }\n    // else {\n    //   return <AskToClear clear={this.onClearBoard} />;\n    // }\n  };\n\n  async chooseSticker(event) {\n    const alt = event.target.alt;\n    console.log(alt);\n    const stickersToChoose = [...this.state.stickersToChoose];\n    // const stickers = [...this.state.stickers];\n    // console.log(stickers);\n    // if (stickers.length === 3) {\n    //   stickers.shift();\n    // }\n    const sticker = stickersToChoose.filter(sticker => sticker.alt === alt)[0];\n    // console.log(sticker);\n    // stickers.push(sticker);\n    await this.setState(state => ({ sticker: sticker }));\n    console.log(this.state.stickers);\n  }\n\n  async chooseReward(event) {\n    const alt = event.target.alt;\n    const rewardsToChoose = [...this.state.rewardsToChoose];\n    const reward = rewardsToChoose.filter(reward => reward.alt === alt)[0];\n    this.setState(state => ({ reward: reward }));\n    console.log(this.state.reward);\n  }\n\n  gameBoard = state =>\n    this.game(this.state.boardActive, this.state.studentActive);\n\n  render() {\n    console.log(this.state.stickers, stickerData);\n    console.log(\"In progress: \" + this.state.boardActive);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return (\n      <div className=\"Home\">\n        {/* <header className=\"App-header\"> */}\n        {/* <img\n            src={\n              \"https://i.ibb.co/6PZqtHk/Screen-Shot-2019-07-19-at-11-22-08-AM.png\"\n            }\n            className=\"App-logo\"\n            alt=\"chalkboard\"\n          /> */}\n        {/* <h1 className=\"App-title\">\n            <img\n              src={\n                \"https://i.ibb.co/0f83Kyv/Screen-Shot-2019-07-25-at-5-56-37-PM.png\"\n              }\n              className=\"App-title\"\n              alt=\"Sticker Star\"\n            />\n          </h1> */}\n        {/* <SelectedInfo\n            student={this.state.student}\n            teacher={this.props.user}\n          /> */}\n        {/* </header> */}\n        <Navbar\n          onClearBoard={this.onClearBoard}\n          onLogout={this.onLogout}\n          onToggleAnimation={this.onToggleAnimation}\n          onToggleSound={this.onToggleSound}\n          pageAnimation={this.state.pageAnimation}\n          pageSound={this.state.pageSound}\n        />\n        <div className=\"main\">\n          <Route\n            exact\n            path=\"/home\"\n            // tag for default?\n            render={routerprops => (\n              <StudentList\n                {...routerprops}\n                clear={this.onClearBoard}\n                boardActive={this.state.boardActive}\n                user={this.props.user}\n                tag={this.props.tag}\n                select={this.chooseStudent}\n                student={this.state.student}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`${match.url}/board`}\n            render={() => <div>{this.gameBoard()}</div>}\n          />\n          <Route\n            exact\n            path={`${match.url}/stickers`}\n            render={() => (\n              <Stickers\n                choose={this.chooseSticker}\n                stickers={stickerData}\n                boardActive={this.state.boardActive}\n                board={this.onStayBoard}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`${match.url}/rewards`}\n            render={() => (\n              <Rewards choose={this.chooseReward} rewards={rewardData} />\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}