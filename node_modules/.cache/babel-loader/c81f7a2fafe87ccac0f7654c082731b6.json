{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/components/StickerBoard.js\";\nimport React, { Component } from \"react\"; // import PropTypes from \"prop-types\";\n// import API from \"../helpers/API.js\";\n// import Sticker from \"./Sticker\";\n\nimport Sticker from \"./Sticker\";\nimport { withRouter } from \"react-router\"; // import Stats from \"./Stats\";\n// import Animation from \"./Animation\";\n// import target from \"../target.png\";\n\nimport \"./sticker.css\";\nimport \"../App.css\";\n\nclass StickerBoard extends Component {\n  // constructor(props) {\n  //   super(props);\n  // this.state = {\n  //   targetSrc: target\n  // };\n  // }\n  render() {\n    //   console.log(this.props.stickers);\n    //   const placedStickers = this.props.stickers.map((sticker, idx) => {\n    //     return (\n    //       <div key={idx}>\n    //         <Sticker\n    //           alt={sticker.alt}\n    //           src={sticker.src}\n    //           onClick={this.props.onPlaceSticker}\n    //         />\n    //       </div>\n    //     );\n    //   });\n    const greeting = () => {\n      console.log(this.props.stickersPlaced);\n\n      if (this.props.boardCompleted) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, this.props.student.name, \", you get a reward!\");\n      }\n\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"You can do it, \", this.props.student.name, \"!\");\n    }; // const reset = () => {\n    //   if (this.props.boardCompleted) {\n    //     return <button onClick={this.props.resetBoard}>Reset board</button>;\n    //   }\n    // };\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, greeting(), React.createElement(\"div\", {\n      className: \"stickerBoard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Sticker, {\n      stickerID: \"1\",\n      completed: this.props.boardCompleted,\n      sticker: this.props.sticker,\n      placeSticker: this.props.onPlaceSticker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Sticker, {\n      stickerID: \"2\",\n      completed: this.props.boardCompleted,\n      sticker: this.props.sticker,\n      placeSticker: this.props.onPlaceSticker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Sticker, {\n      stickerID: \"3\",\n      completed: this.props.boardCompleted,\n      sticker: this.props.sticker,\n      placeSticker: this.props.onPlaceSticker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sticker reward\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        animation: this.props.boardCompleted && this.props.pageAnimation ? \"rotation 2s\" : \"\"\n      },\n      src: this.props.reward.src,\n      alt: this.props.reward.alt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(StickerBoard);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/components/StickerBoard.js"],"names":["React","Component","Sticker","withRouter","StickerBoard","render","greeting","console","log","props","stickersPlaced","boardCompleted","student","name","sticker","onPlaceSticker","animation","pageAnimation","reward","src","alt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;AACA;AACA;;AACA,OAAO,eAAP;AACA,OAAO,YAAP;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnC;AACA;AACA;AACA;AACA;AACA;AAEAI,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,QAAQ,GAAG,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,cAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWE,cAAf,EAA+B;AAC7B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAxB,wBAAP;AACD;;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoB,KAAKJ,KAAL,CAAWG,OAAX,CAAmBC,IAAvC,MAAP;AACD,KAND,CAdO,CAsBP;AACA;AACA;AACA;AACA;;;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGP,QAAQ,EAFX,EAQE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,GADZ;AAEE,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWE,cAFxB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,OAHtB;AAIE,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,cAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,GADZ;AAEE,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWE,cAFxB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,OAHtB;AAIE,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,cAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAcE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,GADZ;AAEE,MAAA,SAAS,EAAE,KAAKN,KAAL,CAAWE,cAFxB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWK,OAHtB;AAIE,MAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,cAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAoBE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EACP,KAAKP,KAAL,CAAWE,cAAX,IAA6B,KAAKF,KAAL,CAAWQ,aAAxC,GACI,aADJ,GAEI;AAJD,OADT;AAOE,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,GAPzB;AAQE,MAAA,GAAG,EAAE,KAAKV,KAAL,CAAWS,MAAX,CAAkBE,GARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBF,CARF,CADF;AAmDD;;AAvFkC;;AA0FrC,eAAejB,UAAU,CAACC,YAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n// import API from \"../helpers/API.js\";\n// import Sticker from \"./Sticker\";\nimport Sticker from \"./Sticker\";\nimport { withRouter } from \"react-router\";\n\n// import Stats from \"./Stats\";\n// import Animation from \"./Animation\";\n// import target from \"../target.png\";\nimport \"./sticker.css\";\nimport \"../App.css\";\n\nclass StickerBoard extends Component {\n  // constructor(props) {\n  //   super(props);\n  // this.state = {\n  //   targetSrc: target\n  // };\n  // }\n\n  render() {\n    //   console.log(this.props.stickers);\n    //   const placedStickers = this.props.stickers.map((sticker, idx) => {\n    //     return (\n    //       <div key={idx}>\n    //         <Sticker\n    //           alt={sticker.alt}\n    //           src={sticker.src}\n    //           onClick={this.props.onPlaceSticker}\n    //         />\n    //       </div>\n    //     );\n    //   });\n\n    const greeting = () => {\n      console.log(this.props.stickersPlaced);\n      if (this.props.boardCompleted) {\n        return <h2>{this.props.student.name}, you get a reward!</h2>;\n      }\n      return <h2>You can do it, {this.props.student.name}!</h2>;\n    };\n\n    // const reset = () => {\n    //   if (this.props.boardCompleted) {\n    //     return <button onClick={this.props.resetBoard}>Reset board</button>;\n    //   }\n    // };\n\n    return (\n      <div>\n        {/* <button onClick={this.props.reset}>Reset Board</button> */}\n        {greeting()}\n        {/* <div className=\"temporary\">\n          <button onClick={this.props.onPlaceSticker}>Place Sticker</button>\n          <p>Stickers Placed: {this.props.stickersPlaced}</p>\n          <Stats student={this.props.student} />\n        </div> */}\n        <div className=\"stickerBoard\">\n          {/* <div className=\"stickers\"> */}\n          <Sticker\n            stickerID=\"1\"\n            completed={this.props.boardCompleted}\n            sticker={this.props.sticker}\n            placeSticker={this.props.onPlaceSticker}\n          />\n          <Sticker\n            stickerID=\"2\"\n            completed={this.props.boardCompleted}\n            sticker={this.props.sticker}\n            placeSticker={this.props.onPlaceSticker}\n          />\n          <Sticker\n            stickerID=\"3\"\n            completed={this.props.boardCompleted}\n            sticker={this.props.sticker}\n            placeSticker={this.props.onPlaceSticker}\n          />\n          <div className=\"sticker reward\">\n            <img\n              style={{\n                animation:\n                  this.props.boardCompleted && this.props.pageAnimation\n                    ? \"rotation 2s\"\n                    : \"\"\n              }}\n              src={this.props.reward.src}\n              alt={this.props.reward.alt}\n            />\n          </div>\n          {/* {placedStickers} */}\n          {/* </div> */}\n          {/* <div className=\"reward\">\n            <p>I'm working for...</p>\n            <img src={this.props.reward.src} alt={this.props.reward.alt} />\n          </div> */}\n        </div>\n        {/* {reset()} */}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(StickerBoard);\n"]},"metadata":{},"sourceType":"module"}