{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/sticker-star-frontend-master/src/components/StudentList.js\";\n// Page provides info on students belonging to teacher, and options to CRUD students\n// GETS all <Student>s with teacherName matching logged in teacher\n// Maps all <Student>s into list of components\n// Passes up props of selected student to <Home>, for SelectedInfo\n//\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as API from \"../helpers/API\";\nimport { withRouter } from \"react-router\";\nimport Add from \"./Add\";\nimport axios from \"axios\";\nimport Student from \"./Student\"; // const { Student } = require(\"./Student\");\n// import './CustomerList.css';\n\nclass StudentList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStudents = () => {\n      axios.get(\"/students\").then(res => {\n        console.log(res);\n        this.setState(state => ({\n          students: res.data\n        }));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onEnterName = event => {\n      const name = event.target.value.trim();\n      this.setState(state => ({\n        newStudent: name\n      }));\n    };\n\n    this.onAddStudent = event => {\n      event.preventDefault();\n\n      if (this.state.newStudent) {\n        const student = {\n          name: this.state.newStudent,\n          teacher: this.props.user.name\n        };\n        console.log(student);\n        axios.post(\"/students/\", {\n          student\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => console.log(err)); // .then(console.log(`Current Student = ${student.name}`))\n        // .then(this.returnToList(event));\n      } else {\n        alert(\"Please enter student name\");\n      }\n    };\n\n    this.state = {\n      newStudent: \"Enter name\",\n      students: []\n    };\n  }\n\n  componentDidMount() {\n    this.getStudents();\n  } // componentDidUpdate() {\n  //   this.getStudents();\n  // }\n\n\n  // studentNameCallback = student => {\n  //   this.props.studentNameCallback(student);\n  // };\n  render(routerprops) {\n    const allStudents = this.state.students.map((student, idx) => {\n      console.log(student);\n      return (// <div key={idx}>\n        React.createElement(Student, {\n          key: idx,\n          student: student,\n          func: this.props.studentFunctions,\n          getStudents: this.getStudents // studentNameCallback={() => this.studentNameCallback(student)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }) // </div>\n\n      );\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Add, {\n      onAddStudent: this.onAddStudent,\n      onEnterName: this.onEnterName,\n      newStudent: this.state.newStudent,\n      className: \"student_add btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.state.students.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, allStudents)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"\\\"You have no students!\\\"\"));\n  }\n\n}\n\nStudentList.propTypes = {\n  customerNameCallbackCustomers: PropTypes.func\n};\nexport default withRouter(StudentList);","map":{"version":3,"sources":["/Users/quizmox/Desktop/sticker-star-frontend-master/src/components/StudentList.js"],"names":["React","Component","PropTypes","API","withRouter","Add","axios","Student","StudentList","constructor","props","getStudents","get","then","res","console","log","setState","state","students","data","catch","err","onEnterName","event","name","target","value","trim","newStudent","onAddStudent","preventDefault","student","teacher","user","post","alert","componentDidMount","render","routerprops","allStudents","map","idx","studentFunctions","length","propTypes","customerNameCallbackCustomers","func"],"mappings":"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","sourcesContent":["// Page provides info on students belonging to teacher, and options to CRUD students\n// GETS all <Student>s with teacherName matching logged in teacher\n// Maps all <Student>s into list of components\n// Passes up props of selected student to <Home>, for SelectedInfo\n//\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as API from \"../helpers/API\";\nimport { withRouter } from \"react-router\";\nimport Add from \"./Add\";\nimport axios from \"axios\";\nimport Student from \"./Student\";\n// const { Student } = require(\"./Student\");\n// import './CustomerList.css';\n\nclass StudentList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newStudent: \"Enter name\",\n      students: []\n    };\n  }\n\n  getStudents = () => {\n    axios\n      .get(\"/students\")\n      .then(res => {\n        console.log(res);\n        this.setState(state => ({ students: res.data }));\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getStudents();\n  }\n\n  // componentDidUpdate() {\n  //   this.getStudents();\n  // }\n\n  onEnterName = event => {\n    const name = event.target.value.trim();\n    this.setState(state => ({ newStudent: name }));\n  };\n\n  onAddStudent = event => {\n    event.preventDefault();\n    if (this.state.newStudent) {\n      const student = {\n        name: this.state.newStudent,\n        teacher: this.props.user.name\n      };\n      console.log(student);\n      axios\n        .post(\"/students/\", { student })\n        .then(res => {\n          console.log(res.data);\n        })\n        .catch(err => console.log(err));\n      // .then(console.log(`Current Student = ${student.name}`))\n      // .then(this.returnToList(event));\n    } else {\n      alert(\"Please enter student name\");\n    }\n  };\n\n  // studentNameCallback = student => {\n  //   this.props.studentNameCallback(student);\n  // };\n\n  render(routerprops) {\n    const allStudents = this.state.students.map((student, idx) => {\n      console.log(student);\n      return (\n        // <div key={idx}>\n        <Student\n          key={idx}\n          student={student}\n          func={this.props.studentFunctions}\n          getStudents={this.getStudents}\n          // studentNameCallback={() => this.studentNameCallback(student)}\n        />\n        // </div>\n      );\n    });\n\n    return (\n      <div>\n        <Add\n          onAddStudent={this.onAddStudent}\n          onEnterName={this.onEnterName}\n          newStudent={this.state.newStudent}\n          className=\"student_add btn btn-primary\"\n        />\n        {this.state.students.length > 0 ? (\n          <div>\n            <div className=\"students\">{allStudents}</div>\n          </div>\n        ) : (\n          <div>\"You have no students!\"</div>\n        )}\n      </div>\n    );\n  }\n}\n\nStudentList.propTypes = {\n  customerNameCallbackCustomers: PropTypes.func\n};\n\nexport default withRouter(StudentList);\n"]},"metadata":{},"sourceType":"module"}