{"ast":null,"code":"import axios from \"axios\";\nexport const addStudent = name => {\n  axios.post(\"/api/students/\", {\n    name: name\n  }).then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n};\nexport const deleteStudent = id => {\n  axios.delete(\"/students/\" + id).then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n}; // Send current user name as teacher name and receive alphabetized students\n\nexport const getStudents = () => {\n  axios.get(\"/students\").then(res => {\n    this.setState(state => ({\n      students: res.data\n    }));\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const loadStudent = id => {\n  axios.get(\"/students/\" + id).then(res => {\n    this.setState(state => ({\n      stickersPlaced: 0,\n      studentName: res.data.student.name,\n      teacherName: res.data.student.teacher,\n      boardsCompleted: res.data.student.boardsCompletedByDate,\n      studentID: res.data.student._id\n    }));\n  }).catch(err => console.log(err));\n};\nexport const updateStudent = student => {\n  axios.put(\"/students/\" + student._id, student).then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n};\nexport const addTeacher = user => {\n  axios.post(\"/signup/\", user).then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n};\nexport const loginTeacher = user => {\n  axios.post(\"/login/\", user).then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n};\nexport const logoutTeacher = () => {\n  axios.get(\"/logout/\").then(res => {\n    console.log(res.data);\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/quizmox/Desktop/sticker-star-frontend-master/src/helpers/API.js"],"names":["axios","addStudent","name","post","then","res","console","log","data","catch","err","deleteStudent","id","delete","getStudents","get","setState","state","students","loadStudent","stickersPlaced","studentName","student","teacherName","teacher","boardsCompleted","boardsCompletedByDate","studentID","_id","updateStudent","put","addTeacher","user","loginTeacher","logoutTeacher"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const addStudent = name => {\n  axios\n    .post(\"/api/students/\", { name: name })\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteStudent = id => {\n  axios\n    .delete(\"/students/\" + id)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => console.log(err));\n};\n\n// Send current user name as teacher name and receive alphabetized students\nexport const getStudents = () => {\n  axios\n    .get(\"/students\")\n    .then(res => {\n      this.setState(state => ({ students: res.data }));\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const loadStudent = id => {\n  axios\n    .get(\"/students/\" + id)\n    .then(res => {\n      this.setState(state => ({\n        stickersPlaced: 0,\n        studentName: res.data.student.name,\n        teacherName: res.data.student.teacher,\n        boardsCompleted: res.data.student.boardsCompletedByDate,\n        studentID: res.data.student._id\n      }));\n    })\n    .catch(err => console.log(err));\n};\n\nexport const updateStudent = student => {\n  axios\n    .put(\"/students/\" + student._id, student)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => console.log(err));\n};\n\nexport const addTeacher = user => {\n  axios\n    .post(\"/signup/\", user)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => console.log(err));\n};\n\nexport const loginTeacher = user => {\n  axios\n    .post(\"/login/\", user)\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => console.log(err));\n};\n\nexport const logoutTeacher = () => {\n  axios\n    .get(\"/logout/\")\n    .then(res => {\n      console.log(res.data);\n    })\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}