{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/components/Home.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\"; // import * as API from \"../helpers/API\";\n\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport SelectStudent from \"./SelectStudent\";\nimport AskToClear from \"./AskToClear\"; // import SelectedInfo from \"./SelectedInfo\";\n\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport Stickers from \"./Stickers\";\nimport Rewards from \"./Rewards\";\nimport soundFile from \"../tada.mp3\";\nimport { stickerData } from \"./stickerData\";\nimport { rewardData } from \"./rewardData\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\nimport confetti from \"canvas-confetti\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleAnimation = () => {\n      this.setState(state => ({\n        pageAnimation: !this.state.pageAnimation\n      }));\n      console.log(this.state.pageAnimation);\n    };\n\n    this.onToggleSound = () => {\n      this.setState(state => ({\n        pageSound: !this.state.pageSound\n      }));\n      console.log(this.state.pageSound);\n    };\n\n    this.chooseStudent = id => {\n      axios.put(\"/students/\" + id).then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardActive: true,\n          studentActive: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      }).then(console.log(this.state.student)).then(this.props.history.push(\"/home/board\")).catch(err => console.log(err));\n    };\n\n    this.ifBoard = () => this.checkBoard(this.state.boardActive, this.state.studentActive);\n\n    this.ifStudent = state => this.checkStudent(this.state.boardActive, this.state.studentActive);\n\n    this.toStickers = () => this.props.history.push(\"home/stickers\");\n\n    this.toRewards = () => this.props.history.push(\"home/rewards\");\n\n    this.toBoard = () => this.props.history.push(\"home/boards\");\n\n    this.toHome = () => this.props.history.push(\"home\");\n\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardActive: false,\n      boardCompleted: false,\n      studentActive: false,\n      pageAnimation: true,\n      pageSound: true,\n      sticker: {\n        src: \"https://i.ibb.co/b2wZDqL/61-Ez-ZBx-ZN2-L-SX425.jpg\",\n        alt: \"star\"\n      },\n      reward: {\n        src: \"https://i.ibb.co/rvtygSG/images.png\",\n        alt: \"great job\"\n      },\n      stickersToChoose: stickerData,\n      rewardsToChoose: rewardData,\n      stickersPlaced: 0\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.chooseStudent = this.chooseStudent.bind(this); // this.onClearBoard = this.onClearBoard.bind(this);\n    // this.onLeaveStudent = this.onLeaveStudent.bind(this);\n    // this.onStayBoard = this.onStayBoard.bind(this);\n\n    this.chooseSticker = this.chooseSticker.bind(this);\n    this.chooseReward = this.chooseReward.bind(this);\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  // onClearBoard() {\n  //   this.setState(prevState => ({\n  //     // student: {\n  //   _id: \"\",\n  //   name: \"\",\n  //   teacher: \"\",\n  //   boardsCompletedByDate: []\n  // },\n  // boardActive: !prevState.boardActive\n  // boardActive: false\n  // studentActive: false\n  // }));\n  // this.props.history.push(\"/home/board\");\n  // this.props.history.push(\"/home\");\n  // }\n  // onLeaveStudent() {\n  //   this.setState(state => ({ student: {}, studentActive: false }));\n  //   this.props.history.push(\"/home\");\n  // }\n  // onStayBoard() {\n  //   this.setState(state => ({ boardActive: true }));\n  //   this.props.history.push(\"/home/board\");\n  // }\n  async resetBoard() {\n    await this.setState(state => ({\n      boardCompleted: false\n    }));\n  }\n\n  async updateStickers() {\n    var duration = 1.5 * 1000;\n    var end = Date.now() + duration;\n\n    if (this.state.stickersPlaced === 3) {\n      if (this.state.pageAnimation) {\n        (function frame() {\n          // launch a few confetti from the left edge\n          confetti({\n            particleCount: 7,\n            angle: 60,\n            spread: 55,\n            origin: {\n              x: 0\n            }\n          }); // and launch a few from the right edge\n\n          confetti({\n            particleCount: 7,\n            angle: 120,\n            spread: 55,\n            origin: {\n              x: 1\n            }\n          }); // keep going until we are out of time\n\n          if (Date.now() < end) {\n            requestAnimationFrame(frame);\n          }\n        })();\n      }\n\n      this.addBoardToStats();\n      console.log(this.state.student.boardsCompletedByDate); // UI.celebrate();\n\n      await this.setState(state => ({\n        boardCompleted: true,\n        stickersPlaced: 0\n      }));\n      axios.put(\"/students/\" + this.state.student._id, this.state.student).then(res => {\n        console.log(res.data);\n      }).then(console.log(\"Boards completed = \".concat(this.state.student.boardsCompleted)));\n    }\n  }\n\n  async onPlaceSticker() {\n    // UI.changeBoard();\n    if (this.state.pageSound) {\n      const audio = new Audio(soundFile);\n      await audio.play();\n    }\n\n    console.log(this.state.stickersPlaced);\n    await this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    console.log(this.state.stickersPlaced);\n    this.updateStickers(); // if (this.state.stickersPlaced === 3) {\n    //   this.addBoardToStats();\n    //   console.log(this.state.student.boardsCompletedByDate);\n    //   // UI.celebrate();\n    //   this.setState(state => ({ stickersPlaced: 0 }));\n    //   axios\n    //     .put(\"/students/\" + this.state.student._id, this.state.student)\n    //     .then(res => {\n    //       console.log(res.data);\n    //     })\n    //     .then(\n    //       console.log(\n    //         `Boards completed = ${this.state.student.boardsCompleted}`\n    //       )\n    //     );\n    // }\n  }\n\n  async addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    }\n\n    console.log(student.boardsCompletedByDate);\n    await this.setState({\n      student: student\n    });\n    console.log(this.state.student);\n  } // CONDITIONAL RENDERING\n\n\n  async checkBoard(boardActive, studentActive) {\n    if (!studentActive) {\n      return React.createElement(SelectStudent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      });\n    } else if (!boardActive && studentActive) {\n      await this.setState(state => ({\n        boardActive: true\n      }));\n      return React.createElement(StickerBoard // {...routerprops}\n      // boardActive={this.boardActive}\n      , {\n        boardActive: true,\n        boardCompleted: this.state.boardCompleted,\n        onPlaceSticker: this.onPlaceSticker,\n        pageAnimation: this.state.pageAnimation,\n        resetBoard: this.resetBoard,\n        reward: this.state.reward,\n        stickersPlaced: this.state.stickersPlaced,\n        sticker: this.state.sticker,\n        student: this.state.student,\n        studentActive: this.state.studentActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n    }\n  }\n\n  async restart() {\n    await this.setState(state => ({\n      boardActive: false,\n      boardCompleted: false,\n      stickersPlaced: 0,\n      student: {},\n      studentActive: false\n    }));\n  }\n\n  async checkStudent(boardActive, studentActive) {\n    if (studentActive || boardActive) {\n      return React.createElement(AskToClear, {\n        restart: this.restart,\n        stay: this.push.history.location(\"home/board\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(StudentList // {...routerprops}\n      // clear={this.onClearBoard}\n      , {\n        boardActive: this.state.boardActive,\n        user: this.props.user,\n        tag: this.props.tag,\n        select: this.chooseStudent,\n        student: this.state.student,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      });\n    }\n  }\n\n  // game = (boardActive, studentActive) => {\n  //   if (!studentActive) {\n  //     return <ChooseStudent />;\n  //   } else if (!boardActive && studentActive) {\n  //     return <AskToClear clear={this.onLeaveStudent} stay={this.onStayBoard} />;\n  //   } else {\n  //     return (\n  //       <StickerBoard\n  //         // {...routerprops}\n  //         // boardActive={this.boardActive}\n  //         boardActive={true}\n  //         boardCompleted={this.state.boardCompleted}\n  //         onPlaceSticker={this.onPlaceSticker}\n  //         pageAnimation={this.state.pageAnimation}\n  //         resetBoard={this.resetBoard}\n  //         reward={this.state.reward}\n  //         stickersPlaced={this.state.stickersPlaced}\n  //         sticker={this.state.sticker}\n  //         student={this.state.student}\n  //         studentActive={this.state.studentActive}\n  //       />\n  //     );\n  //   }\n  //   // else {\n  //   //   return <AskToClear clear={this.onClearBoard} />;\n  //   // }\n  // };\n  async chooseSticker(event) {\n    const alt = event.target.alt;\n    console.log(alt);\n    const stickersToChoose = [...this.state.stickersToChoose]; // const stickers = [...this.state.stickers];\n    // console.log(stickers);\n    // if (stickers.length === 3) {\n    //   stickers.shift();\n    // }\n\n    const sticker = stickersToChoose.filter(sticker => sticker.alt === alt)[0]; // console.log(sticker);\n    // stickers.push(sticker);\n\n    await this.setState(state => ({\n      sticker: sticker\n    }));\n    console.log(this.state.stickers);\n  }\n\n  async chooseReward(event) {\n    const alt = event.target.alt;\n    const rewardsToChoose = [...this.state.rewardsToChoose];\n    const reward = rewardsToChoose.filter(reward => reward.alt === alt)[0];\n    this.setState(state => ({\n      reward: reward\n    }));\n    console.log(this.state.reward);\n  }\n\n  render() {\n    console.log(this.state.stickers, stickerData);\n    console.log(\"In progress: \" + this.state.boardActive);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(Navbar // onClearBoard={this.onClearBoard}\n    , {\n      onLogout: this.onLogout,\n      onToggleAnimation: this.onToggleAnimation,\n      onToggleSound: this.onToggleSound,\n      pageAnimation: this.state.pageAnimation,\n      pageSound: this.state.pageSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, this.ifStudent()) // tag for default?\n      // render={routerprops => (\n      //   <StudentList\n      //     {...routerprops}\n      //     clear={this.onClearBoard}\n      //     boardActive={this.state.boardActive}\n      //     user={this.props.user}\n      //     tag={this.props.tag}\n      //     select={this.chooseStudent}\n      //     student={this.state.student}\n      //   />\n      // )}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/board\"),\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, this.ifBoard()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/stickers\"),\n      render: () => React.createElement(Stickers, {\n        choose: this.chooseSticker,\n        stickers: stickerData,\n        boardActive: this.state.boardActive,\n        studentActive: this.state.studentActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/rewards\"),\n      render: () => React.createElement(Rewards, {\n        choose: this.chooseReward,\n        rewards: rewardData,\n        boardActive: this.state.boardActive,\n        studentActive: this.state.studentActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/components/Home.js"],"names":["React","Component","Route","withRouter","axios","Navbar","SelectStudent","AskToClear","StudentList","StickerBoard","Stickers","Rewards","soundFile","stickerData","rewardData","isSameDay","format","confetti","Home","constructor","props","onToggleAnimation","setState","state","pageAnimation","console","log","onToggleSound","pageSound","chooseStudent","id","put","then","res","data","boardActive","studentActive","stickersPlaced","student","history","push","catch","err","ifBoard","checkBoard","ifStudent","checkStudent","toStickers","toRewards","toBoard","toHome","_id","name","teacher","boardsCompletedByDate","boardCompleted","sticker","src","alt","reward","stickersToChoose","rewardsToChoose","onPlaceSticker","bind","chooseSticker","chooseReward","resetBoard","updateStickers","duration","end","Date","now","frame","particleCount","angle","spread","origin","x","requestAnimationFrame","addBoardToStats","boardsCompleted","audio","Audio","play","prevState","Object","assign","boards","currentBoard","length","today","day","restart","location","user","tag","event","target","filter","stickers","render","match","onLogout","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\";\n// import * as API from \"../helpers/API\";\nimport axios from \"axios\";\nimport Navbar from \"./Navbar\";\nimport SelectStudent from \"./SelectStudent\";\nimport AskToClear from \"./AskToClear\";\n// import SelectedInfo from \"./SelectedInfo\";\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport Stickers from \"./Stickers\";\nimport Rewards from \"./Rewards\";\nimport soundFile from \"../tada.mp3\";\nimport { stickerData } from \"./stickerData\";\nimport { rewardData } from \"./rewardData\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\nimport confetti from \"canvas-confetti\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardActive: false,\n      boardCompleted: false,\n      studentActive: false,\n      pageAnimation: true,\n      pageSound: true,\n      sticker: {\n        src: \"https://i.ibb.co/b2wZDqL/61-Ez-ZBx-ZN2-L-SX425.jpg\",\n        alt: \"star\"\n      },\n      reward: {\n        src: \"https://i.ibb.co/rvtygSG/images.png\",\n        alt: \"great job\"\n      },\n      stickersToChoose: stickerData,\n      rewardsToChoose: rewardData,\n      stickersPlaced: 0\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.chooseStudent = this.chooseStudent.bind(this);\n    // this.onClearBoard = this.onClearBoard.bind(this);\n    // this.onLeaveStudent = this.onLeaveStudent.bind(this);\n    // this.onStayBoard = this.onStayBoard.bind(this);\n    this.chooseSticker = this.chooseSticker.bind(this);\n    this.chooseReward = this.chooseReward.bind(this);\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  onToggleAnimation = () => {\n    this.setState(state => ({\n      pageAnimation: !this.state.pageAnimation\n    }));\n    console.log(this.state.pageAnimation);\n  };\n\n  onToggleSound = () => {\n    this.setState(state => ({\n      pageSound: !this.state.pageSound\n    }));\n    console.log(this.state.pageSound);\n  };\n\n  chooseStudent = id => {\n    axios\n      .put(\"/students/\" + id)\n      .then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardActive: true,\n          studentActive: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      })\n      .then(console.log(this.state.student))\n      .then(this.props.history.push(\"/home/board\"))\n      .catch(err => console.log(err));\n  };\n\n  // onClearBoard() {\n  //   this.setState(prevState => ({\n  //     // student: {\n  //   _id: \"\",\n  //   name: \"\",\n  //   teacher: \"\",\n  //   boardsCompletedByDate: []\n  // },\n  // boardActive: !prevState.boardActive\n  // boardActive: false\n  // studentActive: false\n  // }));\n  // this.props.history.push(\"/home/board\");\n  // this.props.history.push(\"/home\");\n  // }\n\n  // onLeaveStudent() {\n  //   this.setState(state => ({ student: {}, studentActive: false }));\n  //   this.props.history.push(\"/home\");\n  // }\n\n  // onStayBoard() {\n  //   this.setState(state => ({ boardActive: true }));\n  //   this.props.history.push(\"/home/board\");\n  // }\n\n  async resetBoard() {\n    await this.setState(state => ({ boardCompleted: false }));\n  }\n\n  async updateStickers() {\n    var duration = 1.5 * 1000;\n    var end = Date.now() + duration;\n\n    if (this.state.stickersPlaced === 3) {\n      if (this.state.pageAnimation) {\n        (function frame() {\n          // launch a few confetti from the left edge\n          confetti({\n            particleCount: 7,\n            angle: 60,\n            spread: 55,\n            origin: { x: 0 }\n          });\n          // and launch a few from the right edge\n          confetti({\n            particleCount: 7,\n            angle: 120,\n            spread: 55,\n            origin: { x: 1 }\n          });\n          // keep going until we are out of time\n          if (Date.now() < end) {\n            requestAnimationFrame(frame);\n          }\n        })();\n      }\n      this.addBoardToStats();\n      console.log(this.state.student.boardsCompletedByDate);\n      // UI.celebrate();\n      await this.setState(state => ({\n        boardCompleted: true,\n        stickersPlaced: 0\n      }));\n      axios\n        .put(\"/students/\" + this.state.student._id, this.state.student)\n        .then(res => {\n          console.log(res.data);\n        })\n        .then(\n          console.log(\n            `Boards completed = ${this.state.student.boardsCompleted}`\n          )\n        );\n    }\n  }\n\n  async onPlaceSticker() {\n    // UI.changeBoard();\n    if (this.state.pageSound) {\n      const audio = new Audio(soundFile);\n      await audio.play();\n    }\n    console.log(this.state.stickersPlaced);\n    await this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    console.log(this.state.stickersPlaced);\n    this.updateStickers();\n    // if (this.state.stickersPlaced === 3) {\n    //   this.addBoardToStats();\n    //   console.log(this.state.student.boardsCompletedByDate);\n    //   // UI.celebrate();\n    //   this.setState(state => ({ stickersPlaced: 0 }));\n    //   axios\n    //     .put(\"/students/\" + this.state.student._id, this.state.student)\n    //     .then(res => {\n    //       console.log(res.data);\n    //     })\n    //     .then(\n    //       console.log(\n    //         `Boards completed = ${this.state.student.boardsCompleted}`\n    //       )\n    //     );\n    // }\n  }\n\n  async addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    }\n    console.log(student.boardsCompletedByDate);\n    await this.setState({ student: student });\n    console.log(this.state.student);\n  }\n\n  // CONDITIONAL RENDERING\n  async checkBoard(boardActive, studentActive) {\n    if (!studentActive) {\n      return <SelectStudent />;\n    } else if (!boardActive && studentActive) {\n      await this.setState(state => ({ boardActive: true }));\n      return (\n        <StickerBoard\n          // {...routerprops}\n          // boardActive={this.boardActive}\n          boardActive={true}\n          boardCompleted={this.state.boardCompleted}\n          onPlaceSticker={this.onPlaceSticker}\n          pageAnimation={this.state.pageAnimation}\n          resetBoard={this.resetBoard}\n          reward={this.state.reward}\n          stickersPlaced={this.state.stickersPlaced}\n          sticker={this.state.sticker}\n          student={this.state.student}\n          studentActive={this.state.studentActive}\n        />\n      );\n    }\n  }\n\n  ifBoard = () =>\n    this.checkBoard(this.state.boardActive, this.state.studentActive);\n\n  async restart() {\n    await this.setState(state => ({\n      boardActive: false,\n      boardCompleted: false,\n      stickersPlaced: 0,\n      student: {},\n      studentActive: false\n    }));\n  }\n\n  async checkStudent(boardActive, studentActive) {\n    if (studentActive || boardActive) {\n      return (\n        <AskToClear\n          restart={this.restart}\n          stay={this.push.history.location(`home/board`)}\n        />\n      );\n    } else {\n      return (\n        <StudentList\n          // {...routerprops}\n          // clear={this.onClearBoard}\n          boardActive={this.state.boardActive}\n          user={this.props.user}\n          tag={this.props.tag}\n          select={this.chooseStudent}\n          student={this.state.student}\n        />\n      );\n    }\n  }\n\n  ifStudent = state =>\n    this.checkStudent(this.state.boardActive, this.state.studentActive);\n\n  toStickers = () => this.props.history.push(`home/stickers`);\n\n  toRewards = () => this.props.history.push(`home/rewards`);\n\n  toBoard = () => this.props.history.push(`home/boards`);\n\n  toHome = () => this.props.history.push(`home`);\n\n  // game = (boardActive, studentActive) => {\n  //   if (!studentActive) {\n  //     return <ChooseStudent />;\n  //   } else if (!boardActive && studentActive) {\n  //     return <AskToClear clear={this.onLeaveStudent} stay={this.onStayBoard} />;\n  //   } else {\n  //     return (\n  //       <StickerBoard\n  //         // {...routerprops}\n  //         // boardActive={this.boardActive}\n  //         boardActive={true}\n  //         boardCompleted={this.state.boardCompleted}\n  //         onPlaceSticker={this.onPlaceSticker}\n  //         pageAnimation={this.state.pageAnimation}\n  //         resetBoard={this.resetBoard}\n  //         reward={this.state.reward}\n  //         stickersPlaced={this.state.stickersPlaced}\n  //         sticker={this.state.sticker}\n  //         student={this.state.student}\n  //         studentActive={this.state.studentActive}\n  //       />\n  //     );\n  //   }\n  //   // else {\n  //   //   return <AskToClear clear={this.onClearBoard} />;\n  //   // }\n  // };\n\n  async chooseSticker(event) {\n    const alt = event.target.alt;\n    console.log(alt);\n    const stickersToChoose = [...this.state.stickersToChoose];\n    // const stickers = [...this.state.stickers];\n    // console.log(stickers);\n    // if (stickers.length === 3) {\n    //   stickers.shift();\n    // }\n    const sticker = stickersToChoose.filter(sticker => sticker.alt === alt)[0];\n    // console.log(sticker);\n    // stickers.push(sticker);\n    await this.setState(state => ({ sticker: sticker }));\n    console.log(this.state.stickers);\n  }\n\n  async chooseReward(event) {\n    const alt = event.target.alt;\n    const rewardsToChoose = [...this.state.rewardsToChoose];\n    const reward = rewardsToChoose.filter(reward => reward.alt === alt)[0];\n    this.setState(state => ({ reward: reward }));\n    console.log(this.state.reward);\n  }\n\n  render() {\n    console.log(this.state.stickers, stickerData);\n    console.log(\"In progress: \" + this.state.boardActive);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return (\n      <div className=\"Home\">\n        {/* <header className=\"App-header\"> */}\n        {/* <img\n            src={\n              \"https://i.ibb.co/6PZqtHk/Screen-Shot-2019-07-19-at-11-22-08-AM.png\"\n            }\n            className=\"App-logo\"\n            alt=\"chalkboard\"\n          /> */}\n        {/* <h1 className=\"App-title\">\n            <img\n              src={\n                \"https://i.ibb.co/0f83Kyv/Screen-Shot-2019-07-25-at-5-56-37-PM.png\"\n              }\n              className=\"App-title\"\n              alt=\"Sticker Star\"\n            />\n          </h1> */}\n        {/* <SelectedInfo\n            student={this.state.student}\n            teacher={this.props.user}\n          /> */}\n        {/* </header> */}\n        <Navbar\n          // onClearBoard={this.onClearBoard}\n          onLogout={this.onLogout}\n          onToggleAnimation={this.onToggleAnimation}\n          onToggleSound={this.onToggleSound}\n          pageAnimation={this.state.pageAnimation}\n          pageSound={this.state.pageSound}\n        />\n        <div className=\"main\">\n          <Route\n            exact\n            path=\"/home\"\n            render={() => <div>{this.ifStudent()}</div>}\n            // tag for default?\n            // render={routerprops => (\n            //   <StudentList\n            //     {...routerprops}\n            //     clear={this.onClearBoard}\n            //     boardActive={this.state.boardActive}\n            //     user={this.props.user}\n            //     tag={this.props.tag}\n            //     select={this.chooseStudent}\n            //     student={this.state.student}\n            //   />\n            // )}\n          />\n          <Route\n            exact\n            path={`${match.url}/board`}\n            render={() => <div>{this.ifBoard()}</div>}\n          />\n          <Route\n            exact\n            path={`${match.url}/stickers`}\n            render={() => (\n              <Stickers\n                choose={this.chooseSticker}\n                stickers={stickerData}\n                boardActive={this.state.boardActive}\n                studentActive={this.state.studentActive}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`${match.url}/rewards`}\n            render={() => (\n              <Rewards\n                choose={this.chooseReward}\n                rewards={rewardData}\n                boardActive={this.state.boardActive}\n                studentActive={this.state.studentActive}\n              />\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}