{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/sticker-star-frontend-master/src/components/Home.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\";\nimport * as API from \"../helpers/API\";\nimport axios from \"axios\";\nimport Navbar from \"../Navbar\";\nimport ChooseStudent from \"./ChooseStudent\";\nimport AskToClear from \"../AskToClear\";\nimport SelectedInfo from \"./SelectedInfo\";\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleAnimation = () => {\n      this.setState(state => ({\n        pageAnimation: !this.state.pageAnimation\n      }));\n      console.log(this.state.pageAnimation);\n    };\n\n    this.onToggleSound = () => {\n      this.setState(state => ({\n        pageSound: !this.state.pageSound\n      }));\n      console.log(this.state.pageSound);\n    };\n\n    this.onSelectStudent = id => {\n      axios.put(\"/students/\" + id).then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardInProgress: true,\n          studentLoaded: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      }).then(console.log(this.state.student)).then(this.props.history.push(\"/home/board\")).catch(err => console.log(err));\n    };\n\n    this.game = (inProgress, withStudent) => {\n      if (!inProgress && !withStudent) {\n        return React.createElement(ChooseStudent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      } else if (inProgress && withStudent) {\n        return React.createElement(StickerBoard // {...routerprops}\n        // boardInProgress={this.boardInProgress}\n        , {\n          onPlaceSticker: this.onPlaceSticker,\n          stickersPlaced: this.state.stickersPlaced,\n          student: this.state.student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(AskToClear, {\n          clear: this.onClearBoard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.gameBoard = state => this.game(this.state.boardInProgress, this.state.studentLoaded);\n\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardInProgress: false,\n      studentLoaded: false,\n      pageAnimation: true,\n      pageSound: true,\n      // does this go in StickerBoard?\n      stickersPlaced: 0\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.onSelectStudent = this.onSelectStudent.bind(this);\n    this.onClearBoard = this.onClearBoard.bind(this);\n  }\n\n  onClearBoard() {\n    this.setState(state => ({\n      // student: {\n      //   _id: \"\",\n      //   name: \"\",\n      //   teacher: \"\",\n      //   boardsCompletedByDate: []\n      // },\n      boardInProgress: false // studentLoaded: false\n\n    }));\n    this.props.history.push(\"/home/board\");\n  }\n\n  onPlaceSticker() {\n    // UI.changeBoard();\n    // if (!this.state.stickersPlaced) {\n    //   this.setState(state => ({\n    //     stickersPlaced: 1\n    //   }));\n    // } else {\n    console.log(this.state.stickersPlaced);\n    this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n\n    if (this.state.stickersPlaced === 3) {\n      this.addBoardToStats(); // UI.celebrate();\n\n      this.setState(state => ({\n        stickersPlaced: 0\n      }));\n      axios.put(\"/students/\" + this.state.student._id, this.state.student).then(res => {\n        console.log(res.data);\n      }).then(console.log(\"Boards completed = \".concat(this.state.student.boardsCompleted)));\n    }\n  }\n\n  addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({\n        day: today,\n        boardsCompleted: 1\n      });\n    }\n\n    console.log(student.boardsCompletedByDate);\n    this.setState({\n      student: student\n    });\n    console.log(this.state.student);\n  } // CONDITIONAL RENDERING\n\n\n  render() {\n    console.log(\"In progress: \" + this.state.boardInProgress);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://i.ibb.co/6PZqtHk/Screen-Shot-2019-07-19-at-11-22-08-AM.png\",\n      className: \"App-logo\",\n      alt: \"chalkboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://i.ibb.co/TvRxPGd/eb822bd15530836fa9508123006bd24a.png\",\n      className: \"App-title\",\n      alt: \"Sticker Star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(SelectedInfo, {\n      student: this.state.student,\n      teacher: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(Navbar, {\n      onClearBoard: this.onClearBoard,\n      onLogout: this.onLogout,\n      onToggleAnimation: this.onToggleAnimation,\n      onToggleSound: this.onToggleSound,\n      pageAnimation: this.state.pageAnimation,\n      pageSound: this.state.pageSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\" // tag for default?\n      ,\n      render: routerprops => React.createElement(StudentList, Object.assign({}, routerprops, {\n        clear: this.onClearBoard,\n        boardInProgress: this.state.boardInProgress,\n        user: this.props.user,\n        tag: this.props.tag,\n        select: this.onSelectStudent,\n        student: this.state.student // students={this.props.students}\n        // movieTitleCallbackinMovieList={this.movieToRent}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.url, \"/board\"),\n      render: () => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.gameBoard()) // render={routerprops => (\n      //   <Game\n      //     {...routerprops}\n      //     boardInProgress={this.state.boardInProgress}\n      //     onPlaceSticker={this.onPlaceSticker}\n      //     stickersPlaced={this.state.stickersPlaced}\n      //     student={this.state.student}\n      //     // customerNameCallbackCustomers={this.customerRenting}\n      //   />\n      // )}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/quizmox/Desktop/sticker-star-frontend-master/src/components/Home.js"],"names":["React","Component","Route","withRouter","API","axios","Navbar","ChooseStudent","AskToClear","SelectedInfo","StudentList","StickerBoard","isSameDay","format","Home","constructor","props","onToggleAnimation","setState","state","pageAnimation","console","log","onToggleSound","pageSound","onSelectStudent","id","put","then","res","data","boardInProgress","studentLoaded","stickersPlaced","student","history","push","catch","err","game","inProgress","withStudent","onPlaceSticker","onClearBoard","gameBoard","_id","name","teacher","boardsCompletedByDate","bind","prevState","addBoardToStats","boardsCompleted","Object","assign","boards","currentBoard","length","today","Date","now","day","render","match","user","onLogout","routerprops","tag","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport \"../App.css\";\nimport * as API from \"../helpers/API\";\nimport axios from \"axios\";\nimport Navbar from \"../Navbar\";\nimport ChooseStudent from \"./ChooseStudent\";\nimport AskToClear from \"../AskToClear\";\nimport SelectedInfo from \"./SelectedInfo\";\nimport StudentList from \"./StudentList\";\nimport StickerBoard from \"./StickerBoard\";\nimport isSameDay from \"date-fns/is_same_day\";\nimport { format } from \"date-fns\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: {\n        _id: \"\",\n        name: \"\",\n        teacher: \"\",\n        boardsCompletedByDate: []\n      },\n      boardInProgress: false,\n      studentLoaded: false,\n      pageAnimation: true,\n      pageSound: true,\n      // does this go in StickerBoard?\n      stickersPlaced: 0\n    };\n    this.onPlaceSticker = this.onPlaceSticker.bind(this);\n    this.onSelectStudent = this.onSelectStudent.bind(this);\n    this.onClearBoard = this.onClearBoard.bind(this);\n  }\n\n  onToggleAnimation = () => {\n    this.setState(state => ({\n      pageAnimation: !this.state.pageAnimation\n    }));\n    console.log(this.state.pageAnimation);\n  };\n\n  onToggleSound = () => {\n    this.setState(state => ({\n      pageSound: !this.state.pageSound\n    }));\n    console.log(this.state.pageSound);\n  };\n\n  // returnToList = () => {\n  //   this.props.history.push(\"/home\");\n  // };\n\n  // onDeleteStudent = id => {\n  //   API.deleteStudent(id)\n  //     .then(console.log(`Student ${this.state.student.name} deleted`))\n  //     .then(\n  //       this.setState(state => ({\n  //         student: {\n  //           _id: \"\",\n  //           name: \"\",\n  //           teacher: \"\",\n  //           boardsCompleted: []\n  //         }\n  //       })).then(this.returnToList())\n  //     );\n  // };\n\n  onSelectStudent = id => {\n    axios\n      .put(\"/students/\" + id)\n      .then(res => {\n        console.log(res.data);\n        this.setState(state => ({\n          boardInProgress: true,\n          studentLoaded: true,\n          stickersPlaced: 0,\n          student: res.data\n        }));\n        console.log(this.state);\n      })\n      .then(console.log(this.state.student))\n      .then(this.props.history.push(\"/home/board\"))\n      .catch(err => console.log(err));\n  };\n\n  onClearBoard() {\n    this.setState(state => ({\n      // student: {\n      //   _id: \"\",\n      //   name: \"\",\n      //   teacher: \"\",\n      //   boardsCompletedByDate: []\n      // },\n      boardInProgress: false\n      // studentLoaded: false\n    }));\n    this.props.history.push(\"/home/board\");\n  }\n\n  onPlaceSticker() {\n    // UI.changeBoard();\n    // if (!this.state.stickersPlaced) {\n    //   this.setState(state => ({\n    //     stickersPlaced: 1\n    //   }));\n    // } else {\n    console.log(this.state.stickersPlaced);\n    this.setState(prevState => ({\n      stickersPlaced: prevState.stickersPlaced + 1\n    }));\n    if (this.state.stickersPlaced === 3) {\n      this.addBoardToStats();\n      // UI.celebrate();\n      this.setState(state => ({ stickersPlaced: 0 }));\n      axios\n        .put(\"/students/\" + this.state.student._id, this.state.student)\n        .then(res => {\n          console.log(res.data);\n        })\n        .then(\n          console.log(\n            `Boards completed = ${this.state.student.boardsCompleted}`\n          )\n        );\n    }\n  }\n\n  addBoardToStats() {\n    const student = Object.assign({}, this.state.student);\n    const boards = student.boardsCompletedByDate;\n    const currentBoard = boards[boards.length - 1];\n    console.log(currentBoard);\n    const today = format(Date.now(), \"MM/DD/YYYY\");\n    if (!currentBoard) {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    } else if (isSameDay(currentBoard.day, today)) {\n      console.log(\"same day\");\n      currentBoard.boardsCompleted += 1;\n    } else {\n      student.boardsCompletedByDate.push({ day: today, boardsCompleted: 1 });\n    }\n    console.log(student.boardsCompletedByDate);\n    this.setState({ student: student });\n    console.log(this.state.student);\n  }\n\n  // CONDITIONAL RENDERING\n  game = (inProgress, withStudent) => {\n    if (!inProgress && !withStudent) {\n      return <ChooseStudent />;\n    } else if (inProgress && withStudent) {\n      return (\n        <StickerBoard\n          // {...routerprops}\n          // boardInProgress={this.boardInProgress}\n          onPlaceSticker={this.onPlaceSticker}\n          stickersPlaced={this.state.stickersPlaced}\n          student={this.state.student}\n        />\n      );\n    } else {\n      return <AskToClear clear={this.onClearBoard} />;\n    }\n  };\n\n  gameBoard = state =>\n    this.game(this.state.boardInProgress, this.state.studentLoaded);\n\n  render() {\n    console.log(\"In progress: \" + this.state.boardInProgress);\n    console.log(\"Current student: \" + this.state.student._id);\n    let match = this.props.match;\n    return (\n      <div>\n        <header className=\"App-header\">\n          <img\n            src={\n              \"https://i.ibb.co/6PZqtHk/Screen-Shot-2019-07-19-at-11-22-08-AM.png\"\n            }\n            className=\"App-logo\"\n            alt=\"chalkboard\"\n          />\n          <h1 className=\"App-title\">\n            <img\n              src={\n                \"https://i.ibb.co/TvRxPGd/eb822bd15530836fa9508123006bd24a.png\"\n              }\n              className=\"App-title\"\n              alt=\"Sticker Star\"\n            />\n          </h1>\n          <SelectedInfo\n            student={this.state.student}\n            teacher={this.props.user}\n          />\n        </header>\n        <Navbar\n          onClearBoard={this.onClearBoard}\n          onLogout={this.onLogout}\n          onToggleAnimation={this.onToggleAnimation}\n          onToggleSound={this.onToggleSound}\n          pageAnimation={this.state.pageAnimation}\n          pageSound={this.state.pageSound}\n        />\n        <div>\n          <Route\n            exact\n            path=\"/home\"\n            // tag for default?\n            render={routerprops => (\n              <StudentList\n                {...routerprops}\n                clear={this.onClearBoard}\n                boardInProgress={this.state.boardInProgress}\n                user={this.props.user}\n                tag={this.props.tag}\n                select={this.onSelectStudent}\n                student={this.state.student}\n                // students={this.props.students}\n                // movieTitleCallbackinMovieList={this.movieToRent}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={`${match.url}/board`}\n            render={() => <div>{this.gameBoard()}</div>}\n            // render={routerprops => (\n            //   <Game\n            //     {...routerprops}\n            //     boardInProgress={this.state.boardInProgress}\n            //     onPlaceSticker={this.onPlaceSticker}\n            //     stickersPlaced={this.state.stickersPlaced}\n            //     student={this.state.student}\n            //     // customerNameCallbackCustomers={this.customerRenting}\n            //   />\n            // )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}