{"ast":null,"code":"var _jsxFileName = \"/Users/quizmox/Desktop/frontend/src/components/StudentList.js\";\n// Page provides info on students belonging to teacher, and options to CRUD students\n// GETS all <Student>s with teacherName matching logged in teacher\n// Maps all <Student>s into list of components\n// Passes up props of selected student to <Home>, for SelectedInfo\n//\nimport React, { Component } from \"react\"; // import * as API from \"../helpers/API\";\n\nimport { withRouter } from \"react-router\";\nimport Add from \"./Add\";\nimport axios from \"axios\";\nimport Student from \"./Student\"; // import PropTypes from \"prop-types\";\n// import './CustomerList.css';\n\nclass StudentList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEnterName = event => {\n      const name = event.target.value;\n      this.setState(state => ({\n        newStudent: name\n      }));\n      console.log(this.state.newStudent);\n    };\n\n    this.state = {\n      newStudent: \"\",\n      students: []\n    };\n    this.onAddStudent = this.onAddStudent.bind(this);\n    this.getStudents = this.getStudents.bind(this);\n  }\n\n  async getStudents() {\n    const user = this.props.user;\n    console.log(user.name);\n    await axios.put(\"/students/teacher\", {\n      teacher: user.name\n    }).then(res => {\n      console.log(res);\n      this.setState(state => ({\n        students: res.data\n      }));\n    });\n    console.log(\"Retrieving students\");\n  }\n\n  async componentDidMount() {\n    await this.props.getUser();\n    await this.getStudents();\n  } // shouldComponentMount(nextState) {\n  //   return this.state.students.length !== nextState.students.length;\n  // }\n\n\n  async onAddStudent(event) {\n    event.preventDefault(); // const user = localStorage.getItem(\"user\") || this.props.user;\n\n    if (this.state.newStudent) {\n      const student = {\n        name: this.state.newStudent,\n        teacher: this.props.user.name\n      };\n      console.log(student);\n      await axios.post(\"/students/\", student).then(res => {\n        console.log(res.data);\n      });\n      await this.getStudents();\n      this.setState(state => ({\n        newStudent: \"\"\n      })); // .catch(err => console.log(err));\n    } else {\n      alert(\"Please enter student name\");\n    }\n  }\n\n  render(routerprops) {\n    const allStudents = this.state.students.map((student, idx) => {\n      console.log(student);\n      return React.createElement(Student, Object.assign({}, routerprops, {\n        key: idx,\n        student: student,\n        select: this.props.select,\n        user: this.props.user,\n        getStudents: this.getStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"My Students\"), this.state.students.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"students\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, allStudents)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\\"You have no students!\\\"\"), React.createElement(Add, {\n      onAddStudent: this.onAddStudent,\n      onEnterName: this.onEnterName,\n      newStudent: this.state.newStudent,\n      className: \"student_add btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n} // StudentList.propTypes = {\n//\n// };\n\n\nexport default withRouter(StudentList);","map":{"version":3,"sources":["/Users/quizmox/Desktop/frontend/src/components/StudentList.js"],"names":["React","Component","withRouter","Add","axios","Student","StudentList","constructor","props","onEnterName","event","name","target","value","setState","state","newStudent","console","log","students","onAddStudent","bind","getStudents","user","put","teacher","then","res","data","componentDidMount","getUser","preventDefault","student","post","alert","render","routerprops","allStudents","map","idx","select","length"],"mappings":"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","sourcesContent":["// Page provides info on students belonging to teacher, and options to CRUD students\n// GETS all <Student>s with teacherName matching logged in teacher\n// Maps all <Student>s into list of components\n// Passes up props of selected student to <Home>, for SelectedInfo\n//\n\nimport React, { Component } from \"react\";\n// import * as API from \"../helpers/API\";\nimport { withRouter } from \"react-router\";\nimport Add from \"./Add\";\nimport axios from \"axios\";\nimport Student from \"./Student\";\n// import PropTypes from \"prop-types\";\n// import './CustomerList.css';\n\nclass StudentList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newStudent: \"\",\n      students: []\n    };\n    this.onAddStudent = this.onAddStudent.bind(this);\n    this.getStudents = this.getStudents.bind(this);\n  }\n\n  async getStudents() {\n    const user = this.props.user;\n    console.log(user.name);\n    await axios.put(\"/students/teacher\", { teacher: user.name }).then(res => {\n      console.log(res);\n      this.setState(state => ({ students: res.data }));\n    });\n    console.log(\"Retrieving students\");\n  }\n\n  async componentDidMount() {\n    await this.props.getUser();\n    await this.getStudents();\n  }\n\n  // shouldComponentMount(nextState) {\n  //   return this.state.students.length !== nextState.students.length;\n  // }\n\n  onEnterName = event => {\n    const name = event.target.value;\n    this.setState(state => ({ newStudent: name }));\n    console.log(this.state.newStudent);\n  };\n\n  async onAddStudent(event) {\n    event.preventDefault();\n    // const user = localStorage.getItem(\"user\") || this.props.user;\n    if (this.state.newStudent) {\n      const student = {\n        name: this.state.newStudent,\n        teacher: this.props.user.name\n      };\n      console.log(student);\n      await axios.post(\"/students/\", student).then(res => {\n        console.log(res.data);\n      });\n      await this.getStudents();\n      this.setState(state => ({ newStudent: \"\" }));\n      // .catch(err => console.log(err));\n    } else {\n      alert(\"Please enter student name\");\n    }\n  }\n\n  render(routerprops) {\n    const allStudents = this.state.students.map((student, idx) => {\n      console.log(student);\n      return (\n        <Student\n          {...routerprops}\n          key={idx}\n          student={student}\n          select={this.props.select}\n          user={this.props.user}\n          getStudents={this.getStudents}\n        />\n      );\n    });\n\n    return (\n      <div>\n        <h2>My Students</h2>\n        {this.state.students.length > 0 ? (\n          <div>\n            <div className=\"students\">{allStudents}</div>\n          </div>\n        ) : (\n          <div>\"You have no students!\"</div>\n        )}\n        <Add\n          onAddStudent={this.onAddStudent}\n          onEnterName={this.onEnterName}\n          newStudent={this.state.newStudent}\n          className=\"student_add btn btn-primary\"\n        />\n      </div>\n    );\n  }\n}\n\n// StudentList.propTypes = {\n//\n// };\n\nexport default withRouter(StudentList);\n"]},"metadata":{},"sourceType":"module"}